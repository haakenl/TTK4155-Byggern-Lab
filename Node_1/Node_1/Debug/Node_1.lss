
Node_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000244  00800100  000011c8  0000125c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011c8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000030  00800344  00800344  000014a0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000014a0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000014fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000220  00000000  00000000  00001538  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002e7e  00000000  00000000  00001758  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011bf  00000000  00000000  000045d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013aa  00000000  00000000  00005795  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000058c  00000000  00000000  00006b40  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000903  00000000  00000000  000070cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000014af  00000000  00000000  000079cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000290  00000000  00000000  00008e7e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__ctors_end>
       4:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
       8:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
       c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      10:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      14:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      18:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      1c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      20:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      24:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      28:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      2c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      30:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      34:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      38:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      3c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      40:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      44:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      48:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      4c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      50:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      54:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      58:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      5c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      60:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      64:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      68:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      6c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 00       	nop
      76:	00 5f       	subi	r16, 0xF0	; 240
      78:	00 00       	nop
      7a:	00 07       	cpc	r16, r16
      7c:	00 07       	cpc	r16, r16
      7e:	00 14       	cp	r0, r0
      80:	7f 14       	cp	r7, r15
      82:	7f 14       	cp	r7, r15
      84:	24 2a       	or	r2, r20
      86:	7f 2a       	or	r7, r31
      88:	12 23       	and	r17, r18
      8a:	13 08       	sbc	r1, r3
      8c:	64 62       	ori	r22, 0x24	; 36
      8e:	36 49       	sbci	r19, 0x96	; 150
      90:	55 22       	and	r5, r21
      92:	50 00       	.word	0x0050	; ????
      94:	05 03       	mulsu	r16, r21
      96:	00 00       	nop
      98:	00 1c       	adc	r0, r0
      9a:	22 41       	sbci	r18, 0x12	; 18
      9c:	00 00       	nop
      9e:	41 22       	and	r4, r17
      a0:	1c 00       	.word	0x001c	; ????
      a2:	08 2a       	or	r0, r24
      a4:	1c 2a       	or	r1, r28
      a6:	08 08       	sbc	r0, r8
      a8:	08 3e       	cpi	r16, 0xE8	; 232
      aa:	08 08       	sbc	r0, r8
      ac:	00 50       	subi	r16, 0x00	; 0
      ae:	30 00       	.word	0x0030	; ????
      b0:	00 08       	sbc	r0, r0
      b2:	08 08       	sbc	r0, r8
      b4:	08 08       	sbc	r0, r8
      b6:	00 60       	ori	r16, 0x00	; 0
      b8:	60 00       	.word	0x0060	; ????
      ba:	00 20       	and	r0, r0
      bc:	10 08       	sbc	r1, r0
      be:	04 02       	muls	r16, r20
      c0:	3e 51       	subi	r19, 0x1E	; 30
      c2:	49 45       	sbci	r20, 0x59	; 89
      c4:	3e 00       	.word	0x003e	; ????
      c6:	42 7f       	andi	r20, 0xF2	; 242
      c8:	40 00       	.word	0x0040	; ????
      ca:	42 61       	ori	r20, 0x12	; 18
      cc:	51 49       	sbci	r21, 0x91	; 145
      ce:	46 21       	and	r20, r6
      d0:	41 45       	sbci	r20, 0x51	; 81
      d2:	4b 31       	cpi	r20, 0x1B	; 27
      d4:	18 14       	cp	r1, r8
      d6:	12 7f       	andi	r17, 0xF2	; 242
      d8:	10 27       	eor	r17, r16
      da:	45 45       	sbci	r20, 0x55	; 85
      dc:	45 39       	cpi	r20, 0x95	; 149
      de:	3c 4a       	sbci	r19, 0xAC	; 172
      e0:	49 49       	sbci	r20, 0x99	; 153
      e2:	30 01       	movw	r6, r0
      e4:	71 09       	sbc	r23, r1
      e6:	05 03       	mulsu	r16, r21
      e8:	36 49       	sbci	r19, 0x96	; 150
      ea:	49 49       	sbci	r20, 0x99	; 153
      ec:	36 06       	cpc	r3, r22
      ee:	49 49       	sbci	r20, 0x99	; 153
      f0:	29 1e       	adc	r2, r25
      f2:	00 36       	cpi	r16, 0x60	; 96
      f4:	36 00       	.word	0x0036	; ????
      f6:	00 00       	nop
      f8:	56 36       	cpi	r21, 0x66	; 102
      fa:	00 00       	nop
      fc:	00 08       	sbc	r0, r0
      fe:	14 22       	and	r1, r20
     100:	41 14       	cp	r4, r1
     102:	14 14       	cp	r1, r4
     104:	14 14       	cp	r1, r4
     106:	41 22       	and	r4, r17
     108:	14 08       	sbc	r1, r4
     10a:	00 02       	muls	r16, r16
     10c:	01 51       	subi	r16, 0x11	; 17
     10e:	09 06       	cpc	r0, r25
     110:	32 49       	sbci	r19, 0x92	; 146
     112:	79 41       	sbci	r23, 0x19	; 25
     114:	3e 7e       	andi	r19, 0xEE	; 238
     116:	11 11       	cpse	r17, r1
     118:	11 7e       	andi	r17, 0xE1	; 225
     11a:	7f 49       	sbci	r23, 0x9F	; 159
     11c:	49 49       	sbci	r20, 0x99	; 153
     11e:	36 3e       	cpi	r19, 0xE6	; 230
     120:	41 41       	sbci	r20, 0x11	; 17
     122:	41 22       	and	r4, r17
     124:	7f 41       	sbci	r23, 0x1F	; 31
     126:	41 22       	and	r4, r17
     128:	1c 7f       	andi	r17, 0xFC	; 252
     12a:	49 49       	sbci	r20, 0x99	; 153
     12c:	49 41       	sbci	r20, 0x19	; 25
     12e:	7f 09       	sbc	r23, r15
     130:	09 01       	movw	r0, r18
     132:	01 3e       	cpi	r16, 0xE1	; 225
     134:	41 41       	sbci	r20, 0x11	; 17
     136:	51 32       	cpi	r21, 0x21	; 33
     138:	7f 08       	sbc	r7, r15
     13a:	08 08       	sbc	r0, r8
     13c:	7f 00       	.word	0x007f	; ????
     13e:	41 7f       	andi	r20, 0xF1	; 241
     140:	41 00       	.word	0x0041	; ????
     142:	20 40       	sbci	r18, 0x00	; 0
     144:	41 3f       	cpi	r20, 0xF1	; 241
     146:	01 7f       	andi	r16, 0xF1	; 241
     148:	08 14       	cp	r0, r8
     14a:	22 41       	sbci	r18, 0x12	; 18
     14c:	7f 40       	sbci	r23, 0x0F	; 15
     14e:	40 40       	sbci	r20, 0x00	; 0
     150:	40 7f       	andi	r20, 0xF0	; 240
     152:	02 04       	cpc	r0, r2
     154:	02 7f       	andi	r16, 0xF2	; 242
     156:	7f 04       	cpc	r7, r15
     158:	08 10       	cpse	r0, r8
     15a:	7f 3e       	cpi	r23, 0xEF	; 239
     15c:	41 41       	sbci	r20, 0x11	; 17
     15e:	41 3e       	cpi	r20, 0xE1	; 225
     160:	7f 09       	sbc	r23, r15
     162:	09 09       	sbc	r16, r9
     164:	06 3e       	cpi	r16, 0xE6	; 230
     166:	41 51       	subi	r20, 0x11	; 17
     168:	21 5e       	subi	r18, 0xE1	; 225
     16a:	7f 09       	sbc	r23, r15
     16c:	19 29       	or	r17, r9
     16e:	46 46       	sbci	r20, 0x66	; 102
     170:	49 49       	sbci	r20, 0x99	; 153
     172:	49 31       	cpi	r20, 0x19	; 25
     174:	01 01       	movw	r0, r2
     176:	7f 01       	movw	r14, r30
     178:	01 3f       	cpi	r16, 0xF1	; 241
     17a:	40 40       	sbci	r20, 0x00	; 0
     17c:	40 3f       	cpi	r20, 0xF0	; 240
     17e:	1f 20       	and	r1, r15
     180:	40 20       	and	r4, r0
     182:	1f 7f       	andi	r17, 0xFF	; 255
     184:	20 18       	sub	r2, r0
     186:	20 7f       	andi	r18, 0xF0	; 240
     188:	63 14       	cp	r6, r3
     18a:	08 14       	cp	r0, r8
     18c:	63 03       	mulsu	r22, r19
     18e:	04 78       	andi	r16, 0x84	; 132
     190:	04 03       	mulsu	r16, r20
     192:	61 51       	subi	r22, 0x11	; 17
     194:	49 45       	sbci	r20, 0x59	; 89
     196:	43 00       	.word	0x0043	; ????
     198:	00 7f       	andi	r16, 0xF0	; 240
     19a:	41 41       	sbci	r20, 0x11	; 17
     19c:	02 04       	cpc	r0, r2
     19e:	08 10       	cpse	r0, r8
     1a0:	20 41       	sbci	r18, 0x10	; 16
     1a2:	41 7f       	andi	r20, 0xF1	; 241
     1a4:	00 00       	nop
     1a6:	04 02       	muls	r16, r20
     1a8:	01 02       	muls	r16, r17
     1aa:	04 40       	sbci	r16, 0x04	; 4
     1ac:	40 40       	sbci	r20, 0x00	; 0
     1ae:	40 40       	sbci	r20, 0x00	; 0
     1b0:	00 01       	movw	r0, r0
     1b2:	02 04       	cpc	r0, r2
     1b4:	00 20       	and	r0, r0
     1b6:	54 54       	subi	r21, 0x44	; 68
     1b8:	54 78       	andi	r21, 0x84	; 132
     1ba:	7f 48       	sbci	r23, 0x8F	; 143
     1bc:	44 44       	sbci	r20, 0x44	; 68
     1be:	38 38       	cpi	r19, 0x88	; 136
     1c0:	44 44       	sbci	r20, 0x44	; 68
     1c2:	44 20       	and	r4, r4
     1c4:	38 44       	sbci	r19, 0x48	; 72
     1c6:	44 48       	sbci	r20, 0x84	; 132
     1c8:	7f 38       	cpi	r23, 0x8F	; 143
     1ca:	54 54       	subi	r21, 0x44	; 68
     1cc:	54 18       	sub	r5, r4
     1ce:	08 7e       	andi	r16, 0xE8	; 232
     1d0:	09 01       	movw	r0, r18
     1d2:	02 08       	sbc	r0, r2
     1d4:	14 54       	subi	r17, 0x44	; 68
     1d6:	54 3c       	cpi	r21, 0xC4	; 196
     1d8:	7f 08       	sbc	r7, r15
     1da:	04 04       	cpc	r0, r4
     1dc:	78 00       	.word	0x0078	; ????
     1de:	44 7d       	andi	r20, 0xD4	; 212
     1e0:	40 00       	.word	0x0040	; ????
     1e2:	20 40       	sbci	r18, 0x00	; 0
     1e4:	44 3d       	cpi	r20, 0xD4	; 212
     1e6:	00 00       	nop
     1e8:	7f 10       	cpse	r7, r15
     1ea:	28 44       	sbci	r18, 0x48	; 72
     1ec:	00 41       	sbci	r16, 0x10	; 16
     1ee:	7f 40       	sbci	r23, 0x0F	; 15
     1f0:	00 7c       	andi	r16, 0xC0	; 192
     1f2:	04 18       	sub	r0, r4
     1f4:	04 78       	andi	r16, 0x84	; 132
     1f6:	7c 08       	sbc	r7, r12
     1f8:	04 04       	cpc	r0, r4
     1fa:	78 38       	cpi	r23, 0x88	; 136
     1fc:	44 44       	sbci	r20, 0x44	; 68
     1fe:	44 38       	cpi	r20, 0x84	; 132
     200:	7c 14       	cp	r7, r12
     202:	14 14       	cp	r1, r4
     204:	08 08       	sbc	r0, r8
     206:	14 14       	cp	r1, r4
     208:	18 7c       	andi	r17, 0xC8	; 200
     20a:	7c 08       	sbc	r7, r12
     20c:	04 04       	cpc	r0, r4
     20e:	08 48       	sbci	r16, 0x88	; 136
     210:	54 54       	subi	r21, 0x44	; 68
     212:	54 20       	and	r5, r4
     214:	04 3f       	cpi	r16, 0xF4	; 244
     216:	44 40       	sbci	r20, 0x04	; 4
     218:	20 3c       	cpi	r18, 0xC0	; 192
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	20 7c       	andi	r18, 0xC0	; 192
     21e:	1c 20       	and	r1, r12
     220:	40 20       	and	r4, r0
     222:	1c 3c       	cpi	r17, 0xCC	; 204
     224:	40 30       	cpi	r20, 0x00	; 0
     226:	40 3c       	cpi	r20, 0xC0	; 192
     228:	44 28       	or	r4, r4
     22a:	10 28       	or	r1, r0
     22c:	44 0c       	add	r4, r4
     22e:	50 50       	subi	r21, 0x00	; 0
     230:	50 3c       	cpi	r21, 0xC0	; 192
     232:	44 64       	ori	r20, 0x44	; 68
     234:	54 4c       	sbci	r21, 0xC4	; 196
     236:	44 00       	.word	0x0044	; ????
     238:	08 36       	cpi	r16, 0x68	; 104
     23a:	41 00       	.word	0x0041	; ????
     23c:	00 00       	nop
     23e:	7f 00       	.word	0x007f	; ????
     240:	00 00       	nop
     242:	41 36       	cpi	r20, 0x61	; 97
     244:	08 00       	.word	0x0008	; ????
     246:	02 01       	movw	r0, r4
     248:	03 02       	muls	r16, r19
     24a:	01 00       	.word	0x0001	; ????

0000024c <__ctors_end>:
     24c:	11 24       	eor	r1, r1
     24e:	1f be       	out	0x3f, r1	; 63
     250:	cf ef       	ldi	r28, 0xFF	; 255
     252:	d4 e0       	ldi	r29, 0x04	; 4
     254:	de bf       	out	0x3e, r29	; 62
     256:	cd bf       	out	0x3d, r28	; 61

00000258 <__do_copy_data>:
     258:	13 e0       	ldi	r17, 0x03	; 3
     25a:	a0 e0       	ldi	r26, 0x00	; 0
     25c:	b1 e0       	ldi	r27, 0x01	; 1
     25e:	e8 ec       	ldi	r30, 0xC8	; 200
     260:	f1 e1       	ldi	r31, 0x11	; 17
     262:	02 c0       	rjmp	.+4      	; 0x268 <__do_copy_data+0x10>
     264:	05 90       	lpm	r0, Z+
     266:	0d 92       	st	X+, r0
     268:	a4 34       	cpi	r26, 0x44	; 68
     26a:	b1 07       	cpc	r27, r17
     26c:	d9 f7       	brne	.-10     	; 0x264 <__do_copy_data+0xc>

0000026e <__do_clear_bss>:
     26e:	23 e0       	ldi	r18, 0x03	; 3
     270:	a4 e4       	ldi	r26, 0x44	; 68
     272:	b3 e0       	ldi	r27, 0x03	; 3
     274:	01 c0       	rjmp	.+2      	; 0x278 <.do_clear_bss_start>

00000276 <.do_clear_bss_loop>:
     276:	1d 92       	st	X+, r1

00000278 <.do_clear_bss_start>:
     278:	a4 37       	cpi	r26, 0x74	; 116
     27a:	b2 07       	cpc	r27, r18
     27c:	e1 f7       	brne	.-8      	; 0x276 <.do_clear_bss_loop>
     27e:	0e 94 b1 02 	call	0x562	; 0x562 <main>
     282:	0c 94 e2 08 	jmp	0x11c4	; 0x11c4 <_exit>

00000286 <__bad_interrupt>:
     286:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000028a <ADC_init>:
			return current_direction;
		}
		else{
			return NEUTRAL;
		}		
}
     28a:	b8 9a       	sbi	0x17, 0	; 23
     28c:	83 b7       	in	r24, 0x33	; 51
     28e:	88 60       	ori	r24, 0x08	; 8
     290:	83 bf       	out	0x33, r24	; 51
     292:	83 b7       	in	r24, 0x33	; 51
     294:	80 61       	ori	r24, 0x10	; 16
     296:	83 bf       	out	0x33, r24	; 51
     298:	83 b7       	in	r24, 0x33	; 51
     29a:	81 60       	ori	r24, 0x01	; 1
     29c:	83 bf       	out	0x33, r24	; 51
     29e:	8a ea       	ldi	r24, 0xAA	; 170
     2a0:	80 93 44 03 	sts	0x0344, r24	; 0x800344 <__data_end>
     2a4:	80 93 46 03 	sts	0x0346, r24	; 0x800346 <joy_y_offset>
     2a8:	8c e3       	ldi	r24, 0x3C	; 60
     2aa:	80 93 45 03 	sts	0x0345, r24	; 0x800345 <joy_deadband>
     2ae:	08 95       	ret

000002b0 <ADC_read>:
     2b0:	cf 93       	push	r28
     2b2:	df 93       	push	r29
     2b4:	cd b7       	in	r28, 0x3d	; 61
     2b6:	de b7       	in	r29, 0x3e	; 62
     2b8:	28 97       	sbiw	r28, 0x08	; 8
     2ba:	0f b6       	in	r0, 0x3f	; 63
     2bc:	f8 94       	cli
     2be:	de bf       	out	0x3e, r29	; 62
     2c0:	0f be       	out	0x3f, r0	; 63
     2c2:	cd bf       	out	0x3d, r28	; 61
     2c4:	e0 e0       	ldi	r30, 0x00	; 0
     2c6:	f4 e1       	ldi	r31, 0x14	; 20
     2c8:	10 82       	st	Z, r1
     2ca:	40 81       	ld	r20, Z
     2cc:	20 81       	ld	r18, Z
     2ce:	60 81       	ld	r22, Z
     2d0:	80 81       	ld	r24, Z
     2d2:	30 e0       	ldi	r19, 0x00	; 0
     2d4:	3a 83       	std	Y+2, r19	; 0x02
     2d6:	29 83       	std	Y+1, r18	; 0x01
     2d8:	50 e0       	ldi	r21, 0x00	; 0
     2da:	5c 83       	std	Y+4, r21	; 0x04
     2dc:	4b 83       	std	Y+3, r20	; 0x03
     2de:	70 e0       	ldi	r23, 0x00	; 0
     2e0:	7e 83       	std	Y+6, r23	; 0x06
     2e2:	6d 83       	std	Y+5, r22	; 0x05
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	98 87       	std	Y+8, r25	; 0x08
     2e8:	8f 83       	std	Y+7, r24	; 0x07
     2ea:	3a 81       	ldd	r19, Y+2	; 0x02
     2ec:	5c 81       	ldd	r21, Y+4	; 0x04
     2ee:	7e 81       	ldd	r23, Y+6	; 0x06
     2f0:	98 85       	ldd	r25, Y+8	; 0x08
     2f2:	28 96       	adiw	r28, 0x08	; 8
     2f4:	0f b6       	in	r0, 0x3f	; 63
     2f6:	f8 94       	cli
     2f8:	de bf       	out	0x3e, r29	; 62
     2fa:	0f be       	out	0x3f, r0	; 63
     2fc:	cd bf       	out	0x3d, r28	; 61
     2fe:	df 91       	pop	r29
     300:	cf 91       	pop	r28
     302:	08 95       	ret

00000304 <joystick_direction>:
     304:	cf 93       	push	r28
     306:	df 93       	push	r29
     308:	cd b7       	in	r28, 0x3d	; 61
     30a:	de b7       	in	r29, 0x3e	; 62
     30c:	28 97       	sbiw	r28, 0x08	; 8
     30e:	0f b6       	in	r0, 0x3f	; 63
     310:	f8 94       	cli
     312:	de bf       	out	0x3e, r29	; 62
     314:	0f be       	out	0x3f, r0	; 63
     316:	cd bf       	out	0x3d, r28	; 61
     318:	0e 94 58 01 	call	0x2b0	; 0x2b0 <ADC_read>
     31c:	29 83       	std	Y+1, r18	; 0x01
     31e:	3a 83       	std	Y+2, r19	; 0x02
     320:	4b 83       	std	Y+3, r20	; 0x03
     322:	5c 83       	std	Y+4, r21	; 0x04
     324:	20 91 46 03 	lds	r18, 0x0346	; 0x800346 <joy_y_offset>
     328:	8b 81       	ldd	r24, Y+3	; 0x03
     32a:	9c 81       	ldd	r25, Y+4	; 0x04
     32c:	82 1b       	sub	r24, r18
     32e:	91 09       	sbc	r25, r1
     330:	20 91 45 03 	lds	r18, 0x0345	; 0x800345 <joy_deadband>
     334:	30 e0       	ldi	r19, 0x00	; 0
     336:	ac 01       	movw	r20, r24
     338:	99 23       	and	r25, r25
     33a:	24 f4       	brge	.+8      	; 0x344 <joystick_direction+0x40>
     33c:	44 27       	eor	r20, r20
     33e:	55 27       	eor	r21, r21
     340:	48 1b       	sub	r20, r24
     342:	59 0b       	sbc	r21, r25
     344:	24 17       	cp	r18, r20
     346:	35 07       	cpc	r19, r21
     348:	34 f4       	brge	.+12     	; 0x356 <joystick_direction+0x52>
     34a:	89 2f       	mov	r24, r25
     34c:	88 1f       	adc	r24, r24
     34e:	88 27       	eor	r24, r24
     350:	88 1f       	adc	r24, r24
     352:	8e 5f       	subi	r24, 0xFE	; 254
     354:	16 c0       	rjmp	.+44     	; 0x382 <joystick_direction+0x7e>
     356:	40 91 44 03 	lds	r20, 0x0344	; 0x800344 <__data_end>
     35a:	89 81       	ldd	r24, Y+1	; 0x01
     35c:	9a 81       	ldd	r25, Y+2	; 0x02
     35e:	84 1b       	sub	r24, r20
     360:	91 09       	sbc	r25, r1
     362:	ac 01       	movw	r20, r24
     364:	22 f4       	brpl	.+8      	; 0x36e <joystick_direction+0x6a>
     366:	44 27       	eor	r20, r20
     368:	55 27       	eor	r21, r21
     36a:	48 1b       	sub	r20, r24
     36c:	59 0b       	sbc	r21, r25
     36e:	24 17       	cp	r18, r20
     370:	35 07       	cpc	r19, r21
     372:	34 f4       	brge	.+12     	; 0x380 <joystick_direction+0x7c>
     374:	89 2f       	mov	r24, r25
     376:	80 95       	com	r24
     378:	88 1f       	adc	r24, r24
     37a:	88 27       	eor	r24, r24
     37c:	88 1f       	adc	r24, r24
     37e:	01 c0       	rjmp	.+2      	; 0x382 <joystick_direction+0x7e>
     380:	84 e0       	ldi	r24, 0x04	; 4
     382:	28 96       	adiw	r28, 0x08	; 8
     384:	0f b6       	in	r0, 0x3f	; 63
     386:	f8 94       	cli
     388:	de bf       	out	0x3e, r29	; 62
     38a:	0f be       	out	0x3f, r0	; 63
     38c:	cd bf       	out	0x3d, r28	; 61
     38e:	df 91       	pop	r29
     390:	cf 91       	pop	r28
     392:	08 95       	ret

00000394 <ADC_to_prosent>:


unsigned int ADC_to_prosent(unsigned int value){
	return value*100/255;
     394:	44 e6       	ldi	r20, 0x64	; 100
     396:	48 9f       	mul	r20, r24
     398:	90 01       	movw	r18, r0
     39a:	49 9f       	mul	r20, r25
     39c:	30 0d       	add	r19, r0
     39e:	11 24       	eor	r1, r1
     3a0:	a1 e8       	ldi	r26, 0x81	; 129
     3a2:	b0 e8       	ldi	r27, 0x80	; 128
     3a4:	0e 94 2f 04 	call	0x85e	; 0x85e <__umulhisi3>
}
     3a8:	88 0f       	add	r24, r24
     3aa:	89 2f       	mov	r24, r25
     3ac:	88 1f       	adc	r24, r24
     3ae:	99 0b       	sbc	r25, r25
     3b0:	91 95       	neg	r25
     3b2:	08 95       	ret

000003b4 <CAN_read>:
	SPI_transmit(MCP_READ_STATUS);
	data = SPI_recive();
	SPI_release_CAN();
		
	return data;	
}
     3b4:	cf 93       	push	r28
     3b6:	c8 2f       	mov	r28, r24
     3b8:	0e 94 0b 04 	call	0x816	; 0x816 <SPI_enslaved_CAN>
     3bc:	83 e0       	ldi	r24, 0x03	; 3
     3be:	0e 94 02 04 	call	0x804	; 0x804 <SPI_transmit>
     3c2:	8c 2f       	mov	r24, r28
     3c4:	0e 94 02 04 	call	0x804	; 0x804 <SPI_transmit>
     3c8:	0e 94 06 04 	call	0x80c	; 0x80c <SPI_recive>
     3cc:	c8 2f       	mov	r28, r24
     3ce:	0e 94 0d 04 	call	0x81a	; 0x81a <SPI_release_CAN>
     3d2:	8c 2f       	mov	r24, r28
     3d4:	cf 91       	pop	r28
     3d6:	08 95       	ret

000003d8 <CAN_write>:
     3d8:	cf 93       	push	r28
     3da:	df 93       	push	r29
     3dc:	d8 2f       	mov	r29, r24
     3de:	c6 2f       	mov	r28, r22
     3e0:	0e 94 0b 04 	call	0x816	; 0x816 <SPI_enslaved_CAN>
     3e4:	82 e0       	ldi	r24, 0x02	; 2
     3e6:	0e 94 02 04 	call	0x804	; 0x804 <SPI_transmit>
     3ea:	8d 2f       	mov	r24, r29
     3ec:	0e 94 02 04 	call	0x804	; 0x804 <SPI_transmit>
     3f0:	8c 2f       	mov	r24, r28
     3f2:	0e 94 02 04 	call	0x804	; 0x804 <SPI_transmit>
     3f6:	0e 94 0d 04 	call	0x81a	; 0x81a <SPI_release_CAN>
     3fa:	df 91       	pop	r29
     3fc:	cf 91       	pop	r28
     3fe:	08 95       	ret

00000400 <CAN_bit_modify>:
     400:	1f 93       	push	r17
     402:	cf 93       	push	r28
     404:	df 93       	push	r29
     406:	18 2f       	mov	r17, r24
     408:	d6 2f       	mov	r29, r22
     40a:	c4 2f       	mov	r28, r20
     40c:	0e 94 0b 04 	call	0x816	; 0x816 <SPI_enslaved_CAN>
     410:	85 e0       	ldi	r24, 0x05	; 5
     412:	0e 94 02 04 	call	0x804	; 0x804 <SPI_transmit>
     416:	81 2f       	mov	r24, r17
     418:	0e 94 02 04 	call	0x804	; 0x804 <SPI_transmit>
     41c:	8d 2f       	mov	r24, r29
     41e:	0e 94 02 04 	call	0x804	; 0x804 <SPI_transmit>
     422:	8c 2f       	mov	r24, r28
     424:	0e 94 02 04 	call	0x804	; 0x804 <SPI_transmit>
     428:	0e 94 0d 04 	call	0x81a	; 0x81a <SPI_release_CAN>
     42c:	df 91       	pop	r29
     42e:	cf 91       	pop	r28
     430:	1f 91       	pop	r17
     432:	08 95       	ret

00000434 <CAN_sw_reset>:

void CAN_sw_reset(void){
	SPI_enslaved_CAN();
     434:	0e 94 0b 04 	call	0x816	; 0x816 <SPI_enslaved_CAN>
	SPI_transmit(MCP_RESET);
     438:	80 ec       	ldi	r24, 0xC0	; 192
     43a:	0e 94 02 04 	call	0x804	; 0x804 <SPI_transmit>
	SPI_release_CAN();
     43e:	0e 94 0d 04 	call	0x81a	; 0x81a <SPI_release_CAN>
     442:	08 95       	ret

00000444 <CAN_init>:


// Can high level functions below
uint8_t CAN_init(void){
	uint8_t error_check;	
	CAN_sw_reset();
     444:	0e 94 1a 02 	call	0x434	; 0x434 <CAN_sw_reset>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     448:	8f ef       	ldi	r24, 0xFF	; 255
     44a:	9f e2       	ldi	r25, 0x2F	; 47
     44c:	01 97       	sbiw	r24, 0x01	; 1
     44e:	f1 f7       	brne	.-4      	; 0x44c <CAN_init+0x8>
     450:	00 c0       	rjmp	.+0      	; 0x452 <CAN_init+0xe>
     452:	00 00       	nop
	_delay_ms(10);
	
	error_check = CAN_read(MCP_CANSTAT);
     454:	8e e0       	ldi	r24, 0x0E	; 14
     456:	0e 94 da 01 	call	0x3b4	; 0x3b4 <CAN_read>
	if((error_check & MODE_MASK) != MODE_CONFIG){
     45a:	80 7e       	andi	r24, 0xE0	; 224
     45c:	80 38       	cpi	r24, 0x80	; 128
     45e:	f1 f4       	brne	.+60     	; 0x49c <CAN_init+0x58>
	
	//CAN_write(MCP_CNF3, 0x01); 
	//CAN_write(MCP_CNF2, 0xb5);	
	//CAN_write(MCP_CNF1, 0x43);	
	
	CAN_write(MCP_CNF3, 0x05);		//see can config sheet on github
     460:	65 e0       	ldi	r22, 0x05	; 5
     462:	88 e2       	ldi	r24, 0x28	; 40
     464:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <CAN_write>
	CAN_write(MCP_CNF2, 0xb1);		//see can config sheet on github
     468:	61 eb       	ldi	r22, 0xB1	; 177
     46a:	89 e2       	ldi	r24, 0x29	; 41
     46c:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <CAN_write>
	CAN_write(MCP_CNF1, 0x03);		//see can config sheet on github
     470:	63 e0       	ldi	r22, 0x03	; 3
     472:	8a e2       	ldi	r24, 0x2A	; 42
     474:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <CAN_write>
	
	CAN_write(MCP_CANINTE, MCP_RX_INT); //Turn on RX interupt	
     478:	63 e0       	ldi	r22, 0x03	; 3
     47a:	8b e2       	ldi	r24, 0x2B	; 43
     47c:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <CAN_write>
	CAN_bit_modify(MCP_CANCTRL, MODE_POWERUP, MODE_NORMAL);
     480:	40 e0       	ldi	r20, 0x00	; 0
     482:	60 ee       	ldi	r22, 0xE0	; 224
     484:	8f e0       	ldi	r24, 0x0F	; 15
     486:	0e 94 00 02 	call	0x400	; 0x400 <CAN_bit_modify>
		error_check = CAN_read(MCP_CANSTAT);
     48a:	8e e0       	ldi	r24, 0x0E	; 14
     48c:	0e 94 da 01 	call	0x3b4	; 0x3b4 <CAN_read>
	CAN_sw_reset();
	_delay_ms(10);
	
	error_check = CAN_read(MCP_CANSTAT);
	if((error_check & MODE_MASK) != MODE_CONFIG){
		return 1;
     490:	98 2f       	mov	r25, r24
     492:	90 7e       	andi	r25, 0xE0	; 224
     494:	81 e0       	ldi	r24, 0x01	; 1
     496:	19 f4       	brne	.+6      	; 0x49e <CAN_init+0x5a>
     498:	80 e0       	ldi	r24, 0x00	; 0
     49a:	08 95       	ret
     49c:	81 e0       	ldi	r24, 0x01	; 1
		error_check = CAN_read(MCP_CANSTAT);
		if((error_check & MODE_MASK) != MODE_NORMAL){
			return 1;
		}	
	return 0;
}
     49e:	08 95       	ret

000004a0 <GUI_init>:
	menu_t new_game = {"New Game", 0, &new_game};
	menu_t main_menu = {"Main Menu", 3, NULL, {&new_game, &high_score, &settings}};
	menu_t* current_menu;

void GUI_init(){
	clear_high_score.parent = &settings;
     4a0:	a8 e4       	ldi	r26, 0x48	; 72
     4a2:	b1 e0       	ldi	r27, 0x01	; 1
     4a4:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <clear_high_score+0x5>
     4a8:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <clear_high_score+0x4>
	Adjust_joy_deadband.parent = &settings;
     4ac:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <Adjust_joy_deadband+0x5>
     4b0:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <Adjust_joy_deadband+0x4>
	auto_calibrate_joy.parent = &settings;
     4b4:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <auto_calibrate_joy+0x5>
     4b8:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <auto_calibrate_joy+0x4>
	
	settings.parent = &main_menu;
     4bc:	ea e8       	ldi	r30, 0x8A	; 138
     4be:	f1 e0       	ldi	r31, 0x01	; 1
     4c0:	15 96       	adiw	r26, 0x05	; 5
     4c2:	fc 93       	st	X, r31
     4c4:	ee 93       	st	-X, r30
     4c6:	14 97       	sbiw	r26, 0x04	; 4
	high_score.parent = &main_menu;
     4c8:	f0 93 63 01 	sts	0x0163, r31	; 0x800163 <high_score+0x5>
     4cc:	e0 93 62 01 	sts	0x0162, r30	; 0x800162 <high_score+0x4>
	new_game.parent = &main_menu;
     4d0:	f0 93 79 01 	sts	0x0179, r31	; 0x800179 <new_game+0x5>
     4d4:	e0 93 78 01 	sts	0x0178, r30	; 0x800178 <new_game+0x4>
	main_menu.parent = &main_menu;
     4d8:	f5 83       	std	Z+5, r31	; 0x05
     4da:	e4 83       	std	Z+4, r30	; 0x04
	
	current_menu = &main_menu;
     4dc:	f0 93 53 03 	sts	0x0353, r31	; 0x800353 <current_menu+0x1>
     4e0:	e0 93 52 03 	sts	0x0352, r30	; 0x800352 <current_menu>
     4e4:	08 95       	ret

000004e6 <GUI_print_menu>:
}

void GUI_print_menu(menu_t* print_menu){
     4e6:	ef 92       	push	r14
     4e8:	ff 92       	push	r15
     4ea:	0f 93       	push	r16
     4ec:	1f 93       	push	r17
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	7c 01       	movw	r14, r24
	OLED_clear_all();
     4f4:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <OLED_clear_all>
	for(int i=0; i<print_menu->number_of_childs; i++) {
     4f8:	d7 01       	movw	r26, r14
     4fa:	12 96       	adiw	r26, 0x02	; 2
     4fc:	8d 91       	ld	r24, X+
     4fe:	9c 91       	ld	r25, X
     500:	13 97       	sbiw	r26, 0x03	; 3
     502:	18 16       	cp	r1, r24
     504:	19 06       	cpc	r1, r25
     506:	c4 f4       	brge	.+48     	; 0x538 <__stack+0x39>
     508:	87 01       	movw	r16, r14
     50a:	0a 5f       	subi	r16, 0xFA	; 250
     50c:	1f 4f       	sbci	r17, 0xFF	; 255
     50e:	c0 e0       	ldi	r28, 0x00	; 0
     510:	d0 e0       	ldi	r29, 0x00	; 0
		OLED_pos(i, 15);
     512:	6f e0       	ldi	r22, 0x0F	; 15
     514:	8c 2f       	mov	r24, r28
     516:	0e 94 bd 03 	call	0x77a	; 0x77a <OLED_pos>
		OLED_printf((print_menu->children[i])->name);
     51a:	d8 01       	movw	r26, r16
     51c:	ed 91       	ld	r30, X+
     51e:	fd 91       	ld	r31, X+
     520:	8d 01       	movw	r16, r26
     522:	80 81       	ld	r24, Z
     524:	91 81       	ldd	r25, Z+1	; 0x01
     526:	0e 94 9b 03 	call	0x736	; 0x736 <OLED_printf>
	current_menu = &main_menu;
}

void GUI_print_menu(menu_t* print_menu){
	OLED_clear_all();
	for(int i=0; i<print_menu->number_of_childs; i++) {
     52a:	21 96       	adiw	r28, 0x01	; 1
     52c:	f7 01       	movw	r30, r14
     52e:	82 81       	ldd	r24, Z+2	; 0x02
     530:	93 81       	ldd	r25, Z+3	; 0x03
     532:	c8 17       	cp	r28, r24
     534:	d9 07       	cpc	r29, r25
     536:	6c f3       	brlt	.-38     	; 0x512 <__stack+0x13>
		OLED_pos(i, 15);
		OLED_printf((print_menu->children[i])->name);
	}
}
     538:	df 91       	pop	r29
     53a:	cf 91       	pop	r28
     53c:	1f 91       	pop	r17
     53e:	0f 91       	pop	r16
     540:	ff 90       	pop	r15
     542:	ef 90       	pop	r14
     544:	08 95       	ret

00000546 <GUI_print_arrow>:

void GUI_print_arrow(int page){
     546:	cf 93       	push	r28
     548:	c8 2f       	mov	r28, r24
		OLED_clear_arrow();
     54a:	0e 94 c9 03 	call	0x792	; 0x792 <OLED_clear_arrow>
		OLED_pos(page, 0);
     54e:	60 e0       	ldi	r22, 0x00	; 0
     550:	8c 2f       	mov	r24, r28
     552:	0e 94 bd 03 	call	0x77a	; 0x77a <OLED_pos>
		OLED_printf("->");
     556:	81 ea       	ldi	r24, 0xA1	; 161
     558:	91 e0       	ldi	r25, 0x01	; 1
     55a:	0e 94 9b 03 	call	0x736	; 0x736 <OLED_printf>
}
     55e:	cf 91       	pop	r28
     560:	08 95       	ret

00000562 <main>:
#include "CAN.h"



int main(void)
{
     562:	cf 93       	push	r28
     564:	df 93       	push	r29
     566:	cd b7       	in	r28, 0x3d	; 61
     568:	de b7       	in	r29, 0x3e	; 62
     56a:	28 97       	sbiw	r28, 0x08	; 8
     56c:	0f b6       	in	r0, 0x3f	; 63
     56e:	f8 94       	cli
     570:	de bf       	out	0x3e, r29	; 62
     572:	0f be       	out	0x3f, r0	; 63
     574:	cd bf       	out	0x3d, r28	; 61
	/*Indicator led setup*/
	set_bit(LED_reg, LED_error);
     576:	8d 9a       	sbi	0x11, 5	; 17
	set_bit(LED_reg, LED_normal);
     578:	8c 9a       	sbi	0x11, 4	; 17
	
	/* Turn on normal indicator */
	clear_bit(LED_port, LED_normal);
     57a:	94 98       	cbi	0x12, 4	; 18
	set_bit(LED_port, LED_error);
     57c:	95 9a       	sbi	0x12, 5	; 18
     57e:	2f ef       	ldi	r18, 0xFF	; 255
     580:	8f ef       	ldi	r24, 0xFF	; 255
     582:	9e e0       	ldi	r25, 0x0E	; 14
     584:	21 50       	subi	r18, 0x01	; 1
     586:	80 40       	sbci	r24, 0x00	; 0
     588:	90 40       	sbci	r25, 0x00	; 0
     58a:	e1 f7       	brne	.-8      	; 0x584 <main+0x22>
     58c:	00 c0       	rjmp	.+0      	; 0x58e <main+0x2c>
     58e:	00 00       	nop
		
	_delay_ms(1000); //Wait for OLED controller to turn on.
	UART_init();
     590:	0e 94 21 04 	call	0x842	; 0x842 <UART_init>
	SRAM_init();
     594:	0e 94 0f 04 	call	0x81e	; 0x81e <SRAM_init>
	ADC_init();
     598:	0e 94 45 01 	call	0x28a	; 0x28a <ADC_init>
	OLED_init();
     59c:	0e 94 4e 03 	call	0x69c	; 0x69c <OLED_init>
	GUI_init();
     5a0:	0e 94 50 02 	call	0x4a0	; 0x4a0 <GUI_init>
	SPI_MasterInit();
     5a4:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <SPI_MasterInit>
	if (CAN_init() == 1 ){
     5a8:	0e 94 22 02 	call	0x444	; 0x444 <CAN_init>
     5ac:	81 30       	cpi	r24, 0x01	; 1
     5ae:	31 f4       	brne	.+12     	; 0x5bc <main+0x5a>
		printf("CAN init error\n");
     5b0:	8c e9       	ldi	r24, 0x9C	; 156
     5b2:	92 e0       	ldi	r25, 0x02	; 2
     5b4:	0e 94 a6 04 	call	0x94c	; 0x94c <puts>
		set_bit(LED_port, LED_normal);
     5b8:	94 9a       	sbi	0x12, 4	; 18
		clear_bit(LED_port, LED_error);
     5ba:	95 98       	cbi	0x12, 5	; 18
	}
	
	set_bit(PORTB, PB1);	// Enable internal pull-up on PB1	
     5bc:	c1 9a       	sbi	0x18, 1	; 24

	GUI_print_menu(current_menu);
     5be:	80 91 52 03 	lds	r24, 0x0352	; 0x800352 <current_menu>
     5c2:	90 91 53 03 	lds	r25, 0x0353	; 0x800353 <current_menu+0x1>
     5c6:	0e 94 73 02 	call	0x4e6	; 0x4e6 <GUI_print_menu>
	GUI_print_arrow(0);
     5ca:	80 e0       	ldi	r24, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	0e 94 a3 02 	call	0x546	; 0x546 <GUI_print_arrow>
	
		ADC_pos joystick_pos = ADC_read();
		ADC_direction direction;
		
		printf("\n");
		printf("ADC Ch1 read (joystick y-axis) %4d\n", joystick_pos.joy_y);
     5d2:	0f 2e       	mov	r0, r31
     5d4:	fb ea       	ldi	r31, 0xAB	; 171
     5d6:	8f 2e       	mov	r8, r31
     5d8:	f2 e0       	ldi	r31, 0x02	; 2
     5da:	9f 2e       	mov	r9, r31
     5dc:	f0 2d       	mov	r31, r0
		printf("ADC Ch2 read (joystick x-axis) %4d\n", ADC_to_prosent(joystick_pos.joy_x));
     5de:	0f 2e       	mov	r0, r31
     5e0:	ff ec       	ldi	r31, 0xCF	; 207
     5e2:	af 2e       	mov	r10, r31
     5e4:	f2 e0       	ldi	r31, 0x02	; 2
     5e6:	bf 2e       	mov	r11, r31
     5e8:	f0 2d       	mov	r31, r0
		printf("ADC Ch3 read (right slider) %4d\n", ADC_to_prosent(joystick_pos.slider_right));
     5ea:	0f 2e       	mov	r0, r31
     5ec:	f3 ef       	ldi	r31, 0xF3	; 243
     5ee:	cf 2e       	mov	r12, r31
     5f0:	f2 e0       	ldi	r31, 0x02	; 2
     5f2:	df 2e       	mov	r13, r31
     5f4:	f0 2d       	mov	r31, r0
		printf("ADC Ch4 read (left slider) %4d\n", ADC_to_prosent(joystick_pos.slider_left));
     5f6:	0f 2e       	mov	r0, r31
     5f8:	f4 e1       	ldi	r31, 0x14	; 20
     5fa:	ef 2e       	mov	r14, r31
     5fc:	f3 e0       	ldi	r31, 0x03	; 3
     5fe:	ff 2e       	mov	r15, r31
     600:	f0 2d       	mov	r31, r0
		printf("Direction: %x\n", joystick_direction());
     602:	04 e3       	ldi	r16, 0x34	; 52
     604:	13 e0       	ldi	r17, 0x03	; 3
		//set_bit(LED_port, LED_error);
		//_delay_ms(1000);
	
		
	
		ADC_pos joystick_pos = ADC_read();
     606:	0e 94 58 01 	call	0x2b0	; 0x2b0 <ADC_read>
     60a:	29 83       	std	Y+1, r18	; 0x01
     60c:	3a 83       	std	Y+2, r19	; 0x02
     60e:	4b 83       	std	Y+3, r20	; 0x03
     610:	5c 83       	std	Y+4, r21	; 0x04
     612:	6d 83       	std	Y+5, r22	; 0x05
     614:	7e 83       	std	Y+6, r23	; 0x06
     616:	8f 83       	std	Y+7, r24	; 0x07
     618:	98 87       	std	Y+8, r25	; 0x08
		ADC_direction direction;
		
		printf("\n");
     61a:	8a e0       	ldi	r24, 0x0A	; 10
     61c:	90 e0       	ldi	r25, 0x00	; 0
     61e:	0e 94 9f 04 	call	0x93e	; 0x93e <putchar>
		printf("ADC Ch1 read (joystick y-axis) %4d\n", joystick_pos.joy_y);
     622:	8c 81       	ldd	r24, Y+4	; 0x04
     624:	8f 93       	push	r24
     626:	8b 81       	ldd	r24, Y+3	; 0x03
     628:	8f 93       	push	r24
     62a:	9f 92       	push	r9
     62c:	8f 92       	push	r8
     62e:	0e 94 89 04 	call	0x912	; 0x912 <printf>
		printf("ADC Ch2 read (joystick x-axis) %4d\n", ADC_to_prosent(joystick_pos.joy_x));
     632:	89 81       	ldd	r24, Y+1	; 0x01
     634:	9a 81       	ldd	r25, Y+2	; 0x02
     636:	0e 94 ca 01 	call	0x394	; 0x394 <ADC_to_prosent>
     63a:	9f 93       	push	r25
     63c:	8f 93       	push	r24
     63e:	bf 92       	push	r11
     640:	af 92       	push	r10
     642:	0e 94 89 04 	call	0x912	; 0x912 <printf>
		printf("ADC Ch3 read (right slider) %4d\n", ADC_to_prosent(joystick_pos.slider_right));
     646:	8f 81       	ldd	r24, Y+7	; 0x07
     648:	98 85       	ldd	r25, Y+8	; 0x08
     64a:	0e 94 ca 01 	call	0x394	; 0x394 <ADC_to_prosent>
     64e:	9f 93       	push	r25
     650:	8f 93       	push	r24
     652:	df 92       	push	r13
     654:	cf 92       	push	r12
     656:	0e 94 89 04 	call	0x912	; 0x912 <printf>
		printf("ADC Ch4 read (left slider) %4d\n", ADC_to_prosent(joystick_pos.slider_left));
     65a:	8d 81       	ldd	r24, Y+5	; 0x05
     65c:	9e 81       	ldd	r25, Y+6	; 0x06
     65e:	0e 94 ca 01 	call	0x394	; 0x394 <ADC_to_prosent>
     662:	9f 93       	push	r25
     664:	8f 93       	push	r24
     666:	ff 92       	push	r15
     668:	ef 92       	push	r14
     66a:	0e 94 89 04 	call	0x912	; 0x912 <printf>
		printf("Direction: %x\n", joystick_direction());
     66e:	0e 94 82 01 	call	0x304	; 0x304 <joystick_direction>
     672:	1f 92       	push	r1
     674:	8f 93       	push	r24
     676:	1f 93       	push	r17
     678:	0f 93       	push	r16
     67a:	0e 94 89 04 	call	0x912	; 0x912 <printf>
     67e:	2f ef       	ldi	r18, 0xFF	; 255
     680:	8f ef       	ldi	r24, 0xFF	; 255
     682:	9e e0       	ldi	r25, 0x0E	; 14
     684:	21 50       	subi	r18, 0x01	; 1
     686:	80 40       	sbci	r24, 0x00	; 0
     688:	90 40       	sbci	r25, 0x00	; 0
     68a:	e1 f7       	brne	.-8      	; 0x684 <main+0x122>
     68c:	00 c0       	rjmp	.+0      	; 0x68e <main+0x12c>
     68e:	00 00       	nop
     690:	0f b6       	in	r0, 0x3f	; 63
     692:	f8 94       	cli
     694:	de bf       	out	0x3e, r29	; 62
     696:	0f be       	out	0x3f, r0	; 63
     698:	cd bf       	out	0x3d, r28	; 61
     69a:	b5 cf       	rjmp	.-150    	; 0x606 <main+0xa4>

0000069c <OLED_init>:
void OLED_clear_line(uint8_t line){
	OLED_pos(line, 0);
	for (uint8_t i = 0; i < 128; i++){
		OLED_write_data(0x0);
	}
}
     69c:	e0 e0       	ldi	r30, 0x00	; 0
     69e:	f0 e1       	ldi	r31, 0x10	; 16
     6a0:	8e ea       	ldi	r24, 0xAE	; 174
     6a2:	80 83       	st	Z, r24
     6a4:	81 ea       	ldi	r24, 0xA1	; 161
     6a6:	80 83       	st	Z, r24
     6a8:	8a ed       	ldi	r24, 0xDA	; 218
     6aa:	80 83       	st	Z, r24
     6ac:	82 e1       	ldi	r24, 0x12	; 18
     6ae:	80 83       	st	Z, r24
     6b0:	88 ec       	ldi	r24, 0xC8	; 200
     6b2:	80 83       	st	Z, r24
     6b4:	88 ea       	ldi	r24, 0xA8	; 168
     6b6:	80 83       	st	Z, r24
     6b8:	8f e3       	ldi	r24, 0x3F	; 63
     6ba:	80 83       	st	Z, r24
     6bc:	85 ed       	ldi	r24, 0xD5	; 213
     6be:	80 83       	st	Z, r24
     6c0:	80 e8       	ldi	r24, 0x80	; 128
     6c2:	80 83       	st	Z, r24
     6c4:	81 e8       	ldi	r24, 0x81	; 129
     6c6:	80 83       	st	Z, r24
     6c8:	80 e5       	ldi	r24, 0x50	; 80
     6ca:	80 83       	st	Z, r24
     6cc:	89 ed       	ldi	r24, 0xD9	; 217
     6ce:	80 83       	st	Z, r24
     6d0:	81 e2       	ldi	r24, 0x21	; 33
     6d2:	80 83       	st	Z, r24
     6d4:	80 e2       	ldi	r24, 0x20	; 32
     6d6:	80 83       	st	Z, r24
     6d8:	82 e0       	ldi	r24, 0x02	; 2
     6da:	80 83       	st	Z, r24
     6dc:	8b ed       	ldi	r24, 0xDB	; 219
     6de:	80 83       	st	Z, r24
     6e0:	80 e3       	ldi	r24, 0x30	; 48
     6e2:	80 83       	st	Z, r24
     6e4:	8d ea       	ldi	r24, 0xAD	; 173
     6e6:	80 83       	st	Z, r24
     6e8:	10 82       	st	Z, r1
     6ea:	84 ea       	ldi	r24, 0xA4	; 164
     6ec:	80 83       	st	Z, r24
     6ee:	86 ea       	ldi	r24, 0xA6	; 166
     6f0:	80 83       	st	Z, r24
     6f2:	8f ea       	ldi	r24, 0xAF	; 175
     6f4:	80 83       	st	Z, r24
     6f6:	08 95       	ret

000006f8 <OLED_print>:
     6f8:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <font_size>
     6fc:	99 23       	and	r25, r25
     6fe:	d1 f0       	breq	.+52     	; 0x734 <OLED_print+0x3c>
     700:	90 e0       	ldi	r25, 0x00	; 0
     702:	48 2f       	mov	r20, r24
     704:	50 e0       	ldi	r21, 0x00	; 0
     706:	40 52       	subi	r20, 0x20	; 32
     708:	51 09       	sbc	r21, r1
     70a:	9a 01       	movw	r18, r20
     70c:	22 0f       	add	r18, r18
     70e:	33 1f       	adc	r19, r19
     710:	22 0f       	add	r18, r18
     712:	33 1f       	adc	r19, r19
     714:	42 0f       	add	r20, r18
     716:	53 1f       	adc	r21, r19
     718:	a0 e0       	ldi	r26, 0x00	; 0
     71a:	b2 e1       	ldi	r27, 0x12	; 18
     71c:	fa 01       	movw	r30, r20
     71e:	e9 0f       	add	r30, r25
     720:	f1 1d       	adc	r31, r1
     722:	e0 59       	subi	r30, 0x90	; 144
     724:	ff 4f       	sbci	r31, 0xFF	; 255
     726:	e4 91       	lpm	r30, Z
     728:	ec 93       	st	X, r30
     72a:	9f 5f       	subi	r25, 0xFF	; 255
     72c:	20 91 a0 01 	lds	r18, 0x01A0	; 0x8001a0 <font_size>
     730:	92 17       	cp	r25, r18
     732:	a0 f3       	brcs	.-24     	; 0x71c <OLED_print+0x24>
     734:	08 95       	ret

00000736 <OLED_printf>:
     736:	ef 92       	push	r14
     738:	ff 92       	push	r15
     73a:	0f 93       	push	r16
     73c:	1f 93       	push	r17
     73e:	cf 93       	push	r28
     740:	df 93       	push	r29
     742:	8c 01       	movw	r16, r24
     744:	7c 01       	movw	r14, r24
     746:	c0 e0       	ldi	r28, 0x00	; 0
     748:	d0 e0       	ldi	r29, 0x00	; 0
     74a:	06 c0       	rjmp	.+12     	; 0x758 <OLED_printf+0x22>
     74c:	f7 01       	movw	r30, r14
     74e:	81 91       	ld	r24, Z+
     750:	7f 01       	movw	r14, r30
     752:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <OLED_print>
     756:	21 96       	adiw	r28, 0x01	; 1
     758:	f8 01       	movw	r30, r16
     75a:	01 90       	ld	r0, Z+
     75c:	00 20       	and	r0, r0
     75e:	e9 f7       	brne	.-6      	; 0x75a <OLED_printf+0x24>
     760:	31 97       	sbiw	r30, 0x01	; 1
     762:	e0 1b       	sub	r30, r16
     764:	f1 0b       	sbc	r31, r17
     766:	ce 17       	cp	r28, r30
     768:	df 07       	cpc	r29, r31
     76a:	80 f3       	brcs	.-32     	; 0x74c <OLED_printf+0x16>
     76c:	df 91       	pop	r29
     76e:	cf 91       	pop	r28
     770:	1f 91       	pop	r17
     772:	0f 91       	pop	r16
     774:	ff 90       	pop	r15
     776:	ef 90       	pop	r14
     778:	08 95       	ret

0000077a <OLED_pos>:
     77a:	80 6b       	ori	r24, 0xB0	; 176
     77c:	e0 e0       	ldi	r30, 0x00	; 0
     77e:	f0 e1       	ldi	r31, 0x10	; 16
     780:	80 83       	st	Z, r24
     782:	86 2f       	mov	r24, r22
     784:	8f 70       	andi	r24, 0x0F	; 15
     786:	80 83       	st	Z, r24
     788:	62 95       	swap	r22
     78a:	6f 70       	andi	r22, 0x0F	; 15
     78c:	60 61       	ori	r22, 0x10	; 16
     78e:	60 83       	st	Z, r22
     790:	08 95       	ret

00000792 <OLED_clear_arrow>:

void OLED_clear_arrow(void){
     792:	1f 93       	push	r17
     794:	cf 93       	push	r28
     796:	df 93       	push	r29
	OLED_pos(0,0);
     798:	60 e0       	ldi	r22, 0x00	; 0
     79a:	80 e0       	ldi	r24, 0x00	; 0
     79c:	0e 94 bd 03 	call	0x77a	; 0x77a <OLED_pos>
	for (uint8_t j = 0; j < 8; j++){
     7a0:	10 e0       	ldi	r17, 0x00	; 0
	*OLED_write = command; // Removed [0] from OLED_write
}

void OLED_write_data(char data){
	volatile char *OLED_write = (char *) 0x1200;
	*OLED_write = data; // Removed [0] from OLED_write
     7a2:	c0 e0       	ldi	r28, 0x00	; 0
     7a4:	d2 e1       	ldi	r29, 0x12	; 18
}

void OLED_clear_arrow(void){
	OLED_pos(0,0);
	for (uint8_t j = 0; j < 8; j++){
		OLED_pos(j,0);
     7a6:	60 e0       	ldi	r22, 0x00	; 0
     7a8:	81 2f       	mov	r24, r17
     7aa:	0e 94 bd 03 	call	0x77a	; 0x77a <OLED_pos>
     7ae:	8f e0       	ldi	r24, 0x0F	; 15
	*OLED_write = command; // Removed [0] from OLED_write
}

void OLED_write_data(char data){
	volatile char *OLED_write = (char *) 0x1200;
	*OLED_write = data; // Removed [0] from OLED_write
     7b0:	18 82       	st	Y, r1
     7b2:	81 50       	subi	r24, 0x01	; 1

void OLED_clear_arrow(void){
	OLED_pos(0,0);
	for (uint8_t j = 0; j < 8; j++){
		OLED_pos(j,0);
		for (uint8_t i = 0; i < 15; i++){
     7b4:	e9 f7       	brne	.-6      	; 0x7b0 <OLED_clear_arrow+0x1e>
	}
}

void OLED_clear_arrow(void){
	OLED_pos(0,0);
	for (uint8_t j = 0; j < 8; j++){
     7b6:	1f 5f       	subi	r17, 0xFF	; 255
     7b8:	18 30       	cpi	r17, 0x08	; 8
     7ba:	a9 f7       	brne	.-22     	; 0x7a6 <OLED_clear_arrow+0x14>
		OLED_pos(j,0);
		for (uint8_t i = 0; i < 15; i++){
			OLED_write_data(0x0);
		}
	}
}
     7bc:	df 91       	pop	r29
     7be:	cf 91       	pop	r28
     7c0:	1f 91       	pop	r17
     7c2:	08 95       	ret

000007c4 <OLED_clear_all>:

void OLED_clear_all(){
     7c4:	1f 93       	push	r17
     7c6:	cf 93       	push	r28
     7c8:	df 93       	push	r29
		OLED_pos(0,0);
     7ca:	60 e0       	ldi	r22, 0x00	; 0
     7cc:	80 e0       	ldi	r24, 0x00	; 0
     7ce:	0e 94 bd 03 	call	0x77a	; 0x77a <OLED_pos>
		for (uint8_t j = 0; j < 8; j++){
     7d2:	10 e0       	ldi	r17, 0x00	; 0
	*OLED_write = command; // Removed [0] from OLED_write
}

void OLED_write_data(char data){
	volatile char *OLED_write = (char *) 0x1200;
	*OLED_write = data; // Removed [0] from OLED_write
     7d4:	c0 e0       	ldi	r28, 0x00	; 0
     7d6:	d2 e1       	ldi	r29, 0x12	; 18
}

void OLED_clear_all(){
		OLED_pos(0,0);
		for (uint8_t j = 0; j < 8; j++){
			OLED_pos(j,0);
     7d8:	60 e0       	ldi	r22, 0x00	; 0
     7da:	81 2f       	mov	r24, r17
     7dc:	0e 94 bd 03 	call	0x77a	; 0x77a <OLED_pos>
     7e0:	80 e0       	ldi	r24, 0x00	; 0
	*OLED_write = command; // Removed [0] from OLED_write
}

void OLED_write_data(char data){
	volatile char *OLED_write = (char *) 0x1200;
	*OLED_write = data; // Removed [0] from OLED_write
     7e2:	18 82       	st	Y, r1

void OLED_clear_all(){
		OLED_pos(0,0);
		for (uint8_t j = 0; j < 8; j++){
			OLED_pos(j,0);
			for (uint8_t i = 0; i < 128; i++){
     7e4:	8f 5f       	subi	r24, 0xFF	; 255
     7e6:	80 38       	cpi	r24, 0x80	; 128
     7e8:	e1 f7       	brne	.-8      	; 0x7e2 <OLED_clear_all+0x1e>
	}
}

void OLED_clear_all(){
		OLED_pos(0,0);
		for (uint8_t j = 0; j < 8; j++){
     7ea:	1f 5f       	subi	r17, 0xFF	; 255
     7ec:	18 30       	cpi	r17, 0x08	; 8
     7ee:	a1 f7       	brne	.-24     	; 0x7d8 <OLED_clear_all+0x14>
			OLED_pos(j,0);
			for (uint8_t i = 0; i < 128; i++){
				OLED_write_data(0x0);
			}
		}
}
     7f0:	df 91       	pop	r29
     7f2:	cf 91       	pop	r28
     7f4:	1f 91       	pop	r17
     7f6:	08 95       	ret

000007f8 <SPI_MasterInit>:

#include "SPI.h"

void SPI_MasterInit(void){
	// Set MOSI and SCK output, all others input 
	set_bit(DDRB, SPI_MOSI);
     7f8:	bd 9a       	sbi	0x17, 5	; 23
	set_bit(DDRB, SPI_SCK);
     7fa:	bf 9a       	sbi	0x17, 7	; 23
	set_bit(DDRB, SPI_CAN_SS);
     7fc:	bc 9a       	sbi	0x17, 4	; 23
	// Enable SPI, Master, set clock rate fck/16, SPI MODE 0
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
     7fe:	81 e5       	ldi	r24, 0x51	; 81
     800:	8d b9       	out	0x0d, r24	; 13
     802:	08 95       	ret

00000804 <SPI_transmit>:
}

void SPI_transmit(char cData){
	// Start transmission 
	SPDR = cData;
     804:	8f b9       	out	0x0f, r24	; 15
	// Wait for transmission complete 
	while(!(SPSR & (1<<SPIF)));
     806:	77 9b       	sbis	0x0e, 7	; 14
     808:	fe cf       	rjmp	.-4      	; 0x806 <SPI_transmit+0x2>
}
     80a:	08 95       	ret

0000080c <SPI_recive>:

char SPI_recive(void){
	//Wait for transmission to complete 
	SPDR = 0x00;
     80c:	1f b8       	out	0x0f, r1	; 15
	while(!(SPSR & (1<<SPIF)));
     80e:	77 9b       	sbis	0x0e, 7	; 14
     810:	fe cf       	rjmp	.-4      	; 0x80e <SPI_recive+0x2>
	return SPDR;
     812:	8f b1       	in	r24, 0x0f	; 15
}
     814:	08 95       	ret

00000816 <SPI_enslaved_CAN>:

void SPI_enslaved_CAN(void){
	clear_bit(PORTB, SPI_CAN_SS);
     816:	c4 98       	cbi	0x18, 4	; 24
     818:	08 95       	ret

0000081a <SPI_release_CAN>:
}

void SPI_release_CAN(void){
	set_bit(PORTB, SPI_CAN_SS); 
     81a:	c4 9a       	sbi	0x18, 4	; 24
     81c:	08 95       	ret

0000081e <SRAM_init>:


#include "SRAM.h"

void SRAM_init(){
	set_bit(MCUCR,SRE); // Setting SRE enables external SRAM with ALE, WR, RD. Override all other pin settings. Writing to zero disables. 
     81e:	85 b7       	in	r24, 0x35	; 53
     820:	80 68       	ori	r24, 0x80	; 128
     822:	85 bf       	out	0x35, r24	; 53
	set_bit(EMCUCR, SRW01); // Wait two cycles during Read/Write
     824:	86 b7       	in	r24, 0x36	; 54
     826:	88 60       	ori	r24, 0x08	; 8
     828:	86 bf       	out	0x36, r24	; 54
	set_bit(SFIOR,XMM2); // Mask out JTAG. PC4-PC7. 
     82a:	80 b7       	in	r24, 0x30	; 48
     82c:	80 62       	ori	r24, 0x20	; 32
     82e:	80 bf       	out	0x30, r24	; 48
     830:	08 95       	ret

00000832 <UART_transmit>:
 */ 

#include "UART.h"

void UART_transmit(unsigned char data){
	loop_until_bit_is_set(UCSR0A, UDRE0);
     832:	5d 9b       	sbis	0x0b, 5	; 11
     834:	fe cf       	rjmp	.-4      	; 0x832 <UART_transmit>
	UDR0 = data;
     836:	8c b9       	out	0x0c, r24	; 12
     838:	08 95       	ret

0000083a <UART_receive>:
}

unsigned char UART_receive(void){
	loop_until_bit_is_set(UCSR0A, RXC0);
     83a:	5f 9b       	sbis	0x0b, 7	; 11
     83c:	fe cf       	rjmp	.-4      	; 0x83a <UART_receive>
	return UDR0;
     83e:	8c b1       	in	r24, 0x0c	; 12
}
     840:	08 95       	ret

00000842 <UART_init>:

void UART_init(){
	
	// UBRR : USART Baud rate register
	unsigned int ubrr = UBRR;
	UBRR0H = (unsigned char) (ubrr>>8);
     842:	10 bc       	out	0x20, r1	; 32
	UBRR0L = (unsigned char) ubrr;
     844:	8f e1       	ldi	r24, 0x1F	; 31
     846:	89 b9       	out	0x09, r24	; 9
	
	//stop bit, set frame format 8bit packages
	// USBS0 : Stop bit register
	// UCSZ00 set 8 bit format
	UCSR0C = (1<<URSEL0)|(1 << USBS0) | (3 << UCSZ00);
     848:	8e e8       	ldi	r24, 0x8E	; 142
     84a:	80 bd       	out	0x20, r24	; 32
	
	// Enable Transmitter and Receiver
	UCSR0B = (1<<TXEN0)|(1<<RXEN0);
     84c:	88 e1       	ldi	r24, 0x18	; 24
     84e:	8a b9       	out	0x0a, r24	; 10
	
	fdevopen(UART_transmit, UART_receive);
     850:	6d e1       	ldi	r22, 0x1D	; 29
     852:	74 e0       	ldi	r23, 0x04	; 4
     854:	89 e1       	ldi	r24, 0x19	; 25
     856:	94 e0       	ldi	r25, 0x04	; 4
     858:	0e 94 3e 04 	call	0x87c	; 0x87c <fdevopen>
     85c:	08 95       	ret

0000085e <__umulhisi3>:
     85e:	a2 9f       	mul	r26, r18
     860:	b0 01       	movw	r22, r0
     862:	b3 9f       	mul	r27, r19
     864:	c0 01       	movw	r24, r0
     866:	a3 9f       	mul	r26, r19
     868:	70 0d       	add	r23, r0
     86a:	81 1d       	adc	r24, r1
     86c:	11 24       	eor	r1, r1
     86e:	91 1d       	adc	r25, r1
     870:	b2 9f       	mul	r27, r18
     872:	70 0d       	add	r23, r0
     874:	81 1d       	adc	r24, r1
     876:	11 24       	eor	r1, r1
     878:	91 1d       	adc	r25, r1
     87a:	08 95       	ret

0000087c <fdevopen>:
     87c:	0f 93       	push	r16
     87e:	1f 93       	push	r17
     880:	cf 93       	push	r28
     882:	df 93       	push	r29
     884:	00 97       	sbiw	r24, 0x00	; 0
     886:	31 f4       	brne	.+12     	; 0x894 <fdevopen+0x18>
     888:	61 15       	cp	r22, r1
     88a:	71 05       	cpc	r23, r1
     88c:	19 f4       	brne	.+6      	; 0x894 <fdevopen+0x18>
     88e:	80 e0       	ldi	r24, 0x00	; 0
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	3a c0       	rjmp	.+116    	; 0x908 <fdevopen+0x8c>
     894:	8b 01       	movw	r16, r22
     896:	ec 01       	movw	r28, r24
     898:	6e e0       	ldi	r22, 0x0E	; 14
     89a:	70 e0       	ldi	r23, 0x00	; 0
     89c:	81 e0       	ldi	r24, 0x01	; 1
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	0e 94 b7 06 	call	0xd6e	; 0xd6e <calloc>
     8a4:	fc 01       	movw	r30, r24
     8a6:	89 2b       	or	r24, r25
     8a8:	91 f3       	breq	.-28     	; 0x88e <fdevopen+0x12>
     8aa:	80 e8       	ldi	r24, 0x80	; 128
     8ac:	83 83       	std	Z+3, r24	; 0x03
     8ae:	01 15       	cp	r16, r1
     8b0:	11 05       	cpc	r17, r1
     8b2:	71 f0       	breq	.+28     	; 0x8d0 <fdevopen+0x54>
     8b4:	13 87       	std	Z+11, r17	; 0x0b
     8b6:	02 87       	std	Z+10, r16	; 0x0a
     8b8:	81 e8       	ldi	r24, 0x81	; 129
     8ba:	83 83       	std	Z+3, r24	; 0x03
     8bc:	80 91 6a 03 	lds	r24, 0x036A	; 0x80036a <__iob>
     8c0:	90 91 6b 03 	lds	r25, 0x036B	; 0x80036b <__iob+0x1>
     8c4:	89 2b       	or	r24, r25
     8c6:	21 f4       	brne	.+8      	; 0x8d0 <fdevopen+0x54>
     8c8:	f0 93 6b 03 	sts	0x036B, r31	; 0x80036b <__iob+0x1>
     8cc:	e0 93 6a 03 	sts	0x036A, r30	; 0x80036a <__iob>
     8d0:	20 97       	sbiw	r28, 0x00	; 0
     8d2:	c9 f0       	breq	.+50     	; 0x906 <fdevopen+0x8a>
     8d4:	d1 87       	std	Z+9, r29	; 0x09
     8d6:	c0 87       	std	Z+8, r28	; 0x08
     8d8:	83 81       	ldd	r24, Z+3	; 0x03
     8da:	82 60       	ori	r24, 0x02	; 2
     8dc:	83 83       	std	Z+3, r24	; 0x03
     8de:	80 91 6c 03 	lds	r24, 0x036C	; 0x80036c <__iob+0x2>
     8e2:	90 91 6d 03 	lds	r25, 0x036D	; 0x80036d <__iob+0x3>
     8e6:	89 2b       	or	r24, r25
     8e8:	71 f4       	brne	.+28     	; 0x906 <fdevopen+0x8a>
     8ea:	f0 93 6d 03 	sts	0x036D, r31	; 0x80036d <__iob+0x3>
     8ee:	e0 93 6c 03 	sts	0x036C, r30	; 0x80036c <__iob+0x2>
     8f2:	80 91 6e 03 	lds	r24, 0x036E	; 0x80036e <__iob+0x4>
     8f6:	90 91 6f 03 	lds	r25, 0x036F	; 0x80036f <__iob+0x5>
     8fa:	89 2b       	or	r24, r25
     8fc:	21 f4       	brne	.+8      	; 0x906 <fdevopen+0x8a>
     8fe:	f0 93 6f 03 	sts	0x036F, r31	; 0x80036f <__iob+0x5>
     902:	e0 93 6e 03 	sts	0x036E, r30	; 0x80036e <__iob+0x4>
     906:	cf 01       	movw	r24, r30
     908:	df 91       	pop	r29
     90a:	cf 91       	pop	r28
     90c:	1f 91       	pop	r17
     90e:	0f 91       	pop	r16
     910:	08 95       	ret

00000912 <printf>:
     912:	a0 e0       	ldi	r26, 0x00	; 0
     914:	b0 e0       	ldi	r27, 0x00	; 0
     916:	ef e8       	ldi	r30, 0x8F	; 143
     918:	f4 e0       	ldi	r31, 0x04	; 4
     91a:	0c 94 bb 08 	jmp	0x1176	; 0x1176 <__prologue_saves__+0x20>
     91e:	ae 01       	movw	r20, r28
     920:	4b 5f       	subi	r20, 0xFB	; 251
     922:	5f 4f       	sbci	r21, 0xFF	; 255
     924:	fa 01       	movw	r30, r20
     926:	61 91       	ld	r22, Z+
     928:	71 91       	ld	r23, Z+
     92a:	af 01       	movw	r20, r30
     92c:	80 91 6c 03 	lds	r24, 0x036C	; 0x80036c <__iob+0x2>
     930:	90 91 6d 03 	lds	r25, 0x036D	; 0x80036d <__iob+0x3>
     934:	0e 94 d6 04 	call	0x9ac	; 0x9ac <vfprintf>
     938:	e2 e0       	ldi	r30, 0x02	; 2
     93a:	0c 94 d7 08 	jmp	0x11ae	; 0x11ae <__epilogue_restores__+0x20>

0000093e <putchar>:
     93e:	60 91 6c 03 	lds	r22, 0x036C	; 0x80036c <__iob+0x2>
     942:	70 91 6d 03 	lds	r23, 0x036D	; 0x80036d <__iob+0x3>
     946:	0e 94 11 08 	call	0x1022	; 0x1022 <fputc>
     94a:	08 95       	ret

0000094c <puts>:
     94c:	0f 93       	push	r16
     94e:	1f 93       	push	r17
     950:	cf 93       	push	r28
     952:	df 93       	push	r29
     954:	e0 91 6c 03 	lds	r30, 0x036C	; 0x80036c <__iob+0x2>
     958:	f0 91 6d 03 	lds	r31, 0x036D	; 0x80036d <__iob+0x3>
     95c:	23 81       	ldd	r18, Z+3	; 0x03
     95e:	21 ff       	sbrs	r18, 1
     960:	1b c0       	rjmp	.+54     	; 0x998 <puts+0x4c>
     962:	8c 01       	movw	r16, r24
     964:	d0 e0       	ldi	r29, 0x00	; 0
     966:	c0 e0       	ldi	r28, 0x00	; 0
     968:	f8 01       	movw	r30, r16
     96a:	81 91       	ld	r24, Z+
     96c:	8f 01       	movw	r16, r30
     96e:	60 91 6c 03 	lds	r22, 0x036C	; 0x80036c <__iob+0x2>
     972:	70 91 6d 03 	lds	r23, 0x036D	; 0x80036d <__iob+0x3>
     976:	db 01       	movw	r26, r22
     978:	18 96       	adiw	r26, 0x08	; 8
     97a:	ed 91       	ld	r30, X+
     97c:	fc 91       	ld	r31, X
     97e:	19 97       	sbiw	r26, 0x09	; 9
     980:	88 23       	and	r24, r24
     982:	31 f0       	breq	.+12     	; 0x990 <puts+0x44>
     984:	09 95       	icall
     986:	89 2b       	or	r24, r25
     988:	79 f3       	breq	.-34     	; 0x968 <puts+0x1c>
     98a:	df ef       	ldi	r29, 0xFF	; 255
     98c:	cf ef       	ldi	r28, 0xFF	; 255
     98e:	ec cf       	rjmp	.-40     	; 0x968 <puts+0x1c>
     990:	8a e0       	ldi	r24, 0x0A	; 10
     992:	09 95       	icall
     994:	89 2b       	or	r24, r25
     996:	19 f0       	breq	.+6      	; 0x99e <puts+0x52>
     998:	8f ef       	ldi	r24, 0xFF	; 255
     99a:	9f ef       	ldi	r25, 0xFF	; 255
     99c:	02 c0       	rjmp	.+4      	; 0x9a2 <puts+0x56>
     99e:	8d 2f       	mov	r24, r29
     9a0:	9c 2f       	mov	r25, r28
     9a2:	df 91       	pop	r29
     9a4:	cf 91       	pop	r28
     9a6:	1f 91       	pop	r17
     9a8:	0f 91       	pop	r16
     9aa:	08 95       	ret

000009ac <vfprintf>:
     9ac:	ab e0       	ldi	r26, 0x0B	; 11
     9ae:	b0 e0       	ldi	r27, 0x00	; 0
     9b0:	ec ed       	ldi	r30, 0xDC	; 220
     9b2:	f4 e0       	ldi	r31, 0x04	; 4
     9b4:	0c 94 ab 08 	jmp	0x1156	; 0x1156 <__prologue_saves__>
     9b8:	6c 01       	movw	r12, r24
     9ba:	7b 01       	movw	r14, r22
     9bc:	8a 01       	movw	r16, r20
     9be:	fc 01       	movw	r30, r24
     9c0:	17 82       	std	Z+7, r1	; 0x07
     9c2:	16 82       	std	Z+6, r1	; 0x06
     9c4:	83 81       	ldd	r24, Z+3	; 0x03
     9c6:	81 ff       	sbrs	r24, 1
     9c8:	cc c1       	rjmp	.+920    	; 0xd62 <vfprintf+0x3b6>
     9ca:	ce 01       	movw	r24, r28
     9cc:	01 96       	adiw	r24, 0x01	; 1
     9ce:	3c 01       	movw	r6, r24
     9d0:	f6 01       	movw	r30, r12
     9d2:	93 81       	ldd	r25, Z+3	; 0x03
     9d4:	f7 01       	movw	r30, r14
     9d6:	93 fd       	sbrc	r25, 3
     9d8:	85 91       	lpm	r24, Z+
     9da:	93 ff       	sbrs	r25, 3
     9dc:	81 91       	ld	r24, Z+
     9de:	7f 01       	movw	r14, r30
     9e0:	88 23       	and	r24, r24
     9e2:	09 f4       	brne	.+2      	; 0x9e6 <vfprintf+0x3a>
     9e4:	ba c1       	rjmp	.+884    	; 0xd5a <vfprintf+0x3ae>
     9e6:	85 32       	cpi	r24, 0x25	; 37
     9e8:	39 f4       	brne	.+14     	; 0x9f8 <vfprintf+0x4c>
     9ea:	93 fd       	sbrc	r25, 3
     9ec:	85 91       	lpm	r24, Z+
     9ee:	93 ff       	sbrs	r25, 3
     9f0:	81 91       	ld	r24, Z+
     9f2:	7f 01       	movw	r14, r30
     9f4:	85 32       	cpi	r24, 0x25	; 37
     9f6:	29 f4       	brne	.+10     	; 0xa02 <vfprintf+0x56>
     9f8:	b6 01       	movw	r22, r12
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	0e 94 11 08 	call	0x1022	; 0x1022 <fputc>
     a00:	e7 cf       	rjmp	.-50     	; 0x9d0 <vfprintf+0x24>
     a02:	91 2c       	mov	r9, r1
     a04:	21 2c       	mov	r2, r1
     a06:	31 2c       	mov	r3, r1
     a08:	ff e1       	ldi	r31, 0x1F	; 31
     a0a:	f3 15       	cp	r31, r3
     a0c:	d8 f0       	brcs	.+54     	; 0xa44 <vfprintf+0x98>
     a0e:	8b 32       	cpi	r24, 0x2B	; 43
     a10:	79 f0       	breq	.+30     	; 0xa30 <vfprintf+0x84>
     a12:	38 f4       	brcc	.+14     	; 0xa22 <vfprintf+0x76>
     a14:	80 32       	cpi	r24, 0x20	; 32
     a16:	79 f0       	breq	.+30     	; 0xa36 <vfprintf+0x8a>
     a18:	83 32       	cpi	r24, 0x23	; 35
     a1a:	a1 f4       	brne	.+40     	; 0xa44 <vfprintf+0x98>
     a1c:	23 2d       	mov	r18, r3
     a1e:	20 61       	ori	r18, 0x10	; 16
     a20:	1d c0       	rjmp	.+58     	; 0xa5c <vfprintf+0xb0>
     a22:	8d 32       	cpi	r24, 0x2D	; 45
     a24:	61 f0       	breq	.+24     	; 0xa3e <vfprintf+0x92>
     a26:	80 33       	cpi	r24, 0x30	; 48
     a28:	69 f4       	brne	.+26     	; 0xa44 <vfprintf+0x98>
     a2a:	23 2d       	mov	r18, r3
     a2c:	21 60       	ori	r18, 0x01	; 1
     a2e:	16 c0       	rjmp	.+44     	; 0xa5c <vfprintf+0xb0>
     a30:	83 2d       	mov	r24, r3
     a32:	82 60       	ori	r24, 0x02	; 2
     a34:	38 2e       	mov	r3, r24
     a36:	e3 2d       	mov	r30, r3
     a38:	e4 60       	ori	r30, 0x04	; 4
     a3a:	3e 2e       	mov	r3, r30
     a3c:	2a c0       	rjmp	.+84     	; 0xa92 <vfprintf+0xe6>
     a3e:	f3 2d       	mov	r31, r3
     a40:	f8 60       	ori	r31, 0x08	; 8
     a42:	1d c0       	rjmp	.+58     	; 0xa7e <vfprintf+0xd2>
     a44:	37 fc       	sbrc	r3, 7
     a46:	2d c0       	rjmp	.+90     	; 0xaa2 <vfprintf+0xf6>
     a48:	20 ed       	ldi	r18, 0xD0	; 208
     a4a:	28 0f       	add	r18, r24
     a4c:	2a 30       	cpi	r18, 0x0A	; 10
     a4e:	40 f0       	brcs	.+16     	; 0xa60 <vfprintf+0xb4>
     a50:	8e 32       	cpi	r24, 0x2E	; 46
     a52:	b9 f4       	brne	.+46     	; 0xa82 <vfprintf+0xd6>
     a54:	36 fc       	sbrc	r3, 6
     a56:	81 c1       	rjmp	.+770    	; 0xd5a <vfprintf+0x3ae>
     a58:	23 2d       	mov	r18, r3
     a5a:	20 64       	ori	r18, 0x40	; 64
     a5c:	32 2e       	mov	r3, r18
     a5e:	19 c0       	rjmp	.+50     	; 0xa92 <vfprintf+0xe6>
     a60:	36 fe       	sbrs	r3, 6
     a62:	06 c0       	rjmp	.+12     	; 0xa70 <vfprintf+0xc4>
     a64:	8a e0       	ldi	r24, 0x0A	; 10
     a66:	98 9e       	mul	r9, r24
     a68:	20 0d       	add	r18, r0
     a6a:	11 24       	eor	r1, r1
     a6c:	92 2e       	mov	r9, r18
     a6e:	11 c0       	rjmp	.+34     	; 0xa92 <vfprintf+0xe6>
     a70:	ea e0       	ldi	r30, 0x0A	; 10
     a72:	2e 9e       	mul	r2, r30
     a74:	20 0d       	add	r18, r0
     a76:	11 24       	eor	r1, r1
     a78:	22 2e       	mov	r2, r18
     a7a:	f3 2d       	mov	r31, r3
     a7c:	f0 62       	ori	r31, 0x20	; 32
     a7e:	3f 2e       	mov	r3, r31
     a80:	08 c0       	rjmp	.+16     	; 0xa92 <vfprintf+0xe6>
     a82:	8c 36       	cpi	r24, 0x6C	; 108
     a84:	21 f4       	brne	.+8      	; 0xa8e <vfprintf+0xe2>
     a86:	83 2d       	mov	r24, r3
     a88:	80 68       	ori	r24, 0x80	; 128
     a8a:	38 2e       	mov	r3, r24
     a8c:	02 c0       	rjmp	.+4      	; 0xa92 <vfprintf+0xe6>
     a8e:	88 36       	cpi	r24, 0x68	; 104
     a90:	41 f4       	brne	.+16     	; 0xaa2 <vfprintf+0xf6>
     a92:	f7 01       	movw	r30, r14
     a94:	93 fd       	sbrc	r25, 3
     a96:	85 91       	lpm	r24, Z+
     a98:	93 ff       	sbrs	r25, 3
     a9a:	81 91       	ld	r24, Z+
     a9c:	7f 01       	movw	r14, r30
     a9e:	81 11       	cpse	r24, r1
     aa0:	b3 cf       	rjmp	.-154    	; 0xa08 <vfprintf+0x5c>
     aa2:	98 2f       	mov	r25, r24
     aa4:	9f 7d       	andi	r25, 0xDF	; 223
     aa6:	95 54       	subi	r25, 0x45	; 69
     aa8:	93 30       	cpi	r25, 0x03	; 3
     aaa:	28 f4       	brcc	.+10     	; 0xab6 <vfprintf+0x10a>
     aac:	0c 5f       	subi	r16, 0xFC	; 252
     aae:	1f 4f       	sbci	r17, 0xFF	; 255
     ab0:	9f e3       	ldi	r25, 0x3F	; 63
     ab2:	99 83       	std	Y+1, r25	; 0x01
     ab4:	0d c0       	rjmp	.+26     	; 0xad0 <vfprintf+0x124>
     ab6:	83 36       	cpi	r24, 0x63	; 99
     ab8:	31 f0       	breq	.+12     	; 0xac6 <vfprintf+0x11a>
     aba:	83 37       	cpi	r24, 0x73	; 115
     abc:	71 f0       	breq	.+28     	; 0xada <vfprintf+0x12e>
     abe:	83 35       	cpi	r24, 0x53	; 83
     ac0:	09 f0       	breq	.+2      	; 0xac4 <vfprintf+0x118>
     ac2:	59 c0       	rjmp	.+178    	; 0xb76 <vfprintf+0x1ca>
     ac4:	21 c0       	rjmp	.+66     	; 0xb08 <vfprintf+0x15c>
     ac6:	f8 01       	movw	r30, r16
     ac8:	80 81       	ld	r24, Z
     aca:	89 83       	std	Y+1, r24	; 0x01
     acc:	0e 5f       	subi	r16, 0xFE	; 254
     ace:	1f 4f       	sbci	r17, 0xFF	; 255
     ad0:	88 24       	eor	r8, r8
     ad2:	83 94       	inc	r8
     ad4:	91 2c       	mov	r9, r1
     ad6:	53 01       	movw	r10, r6
     ad8:	13 c0       	rjmp	.+38     	; 0xb00 <vfprintf+0x154>
     ada:	28 01       	movw	r4, r16
     adc:	f2 e0       	ldi	r31, 0x02	; 2
     ade:	4f 0e       	add	r4, r31
     ae0:	51 1c       	adc	r5, r1
     ae2:	f8 01       	movw	r30, r16
     ae4:	a0 80       	ld	r10, Z
     ae6:	b1 80       	ldd	r11, Z+1	; 0x01
     ae8:	36 fe       	sbrs	r3, 6
     aea:	03 c0       	rjmp	.+6      	; 0xaf2 <vfprintf+0x146>
     aec:	69 2d       	mov	r22, r9
     aee:	70 e0       	ldi	r23, 0x00	; 0
     af0:	02 c0       	rjmp	.+4      	; 0xaf6 <vfprintf+0x14a>
     af2:	6f ef       	ldi	r22, 0xFF	; 255
     af4:	7f ef       	ldi	r23, 0xFF	; 255
     af6:	c5 01       	movw	r24, r10
     af8:	0e 94 06 08 	call	0x100c	; 0x100c <strnlen>
     afc:	4c 01       	movw	r8, r24
     afe:	82 01       	movw	r16, r4
     b00:	f3 2d       	mov	r31, r3
     b02:	ff 77       	andi	r31, 0x7F	; 127
     b04:	3f 2e       	mov	r3, r31
     b06:	16 c0       	rjmp	.+44     	; 0xb34 <vfprintf+0x188>
     b08:	28 01       	movw	r4, r16
     b0a:	22 e0       	ldi	r18, 0x02	; 2
     b0c:	42 0e       	add	r4, r18
     b0e:	51 1c       	adc	r5, r1
     b10:	f8 01       	movw	r30, r16
     b12:	a0 80       	ld	r10, Z
     b14:	b1 80       	ldd	r11, Z+1	; 0x01
     b16:	36 fe       	sbrs	r3, 6
     b18:	03 c0       	rjmp	.+6      	; 0xb20 <vfprintf+0x174>
     b1a:	69 2d       	mov	r22, r9
     b1c:	70 e0       	ldi	r23, 0x00	; 0
     b1e:	02 c0       	rjmp	.+4      	; 0xb24 <vfprintf+0x178>
     b20:	6f ef       	ldi	r22, 0xFF	; 255
     b22:	7f ef       	ldi	r23, 0xFF	; 255
     b24:	c5 01       	movw	r24, r10
     b26:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <strnlen_P>
     b2a:	4c 01       	movw	r8, r24
     b2c:	f3 2d       	mov	r31, r3
     b2e:	f0 68       	ori	r31, 0x80	; 128
     b30:	3f 2e       	mov	r3, r31
     b32:	82 01       	movw	r16, r4
     b34:	33 fc       	sbrc	r3, 3
     b36:	1b c0       	rjmp	.+54     	; 0xb6e <vfprintf+0x1c2>
     b38:	82 2d       	mov	r24, r2
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	88 16       	cp	r8, r24
     b3e:	99 06       	cpc	r9, r25
     b40:	b0 f4       	brcc	.+44     	; 0xb6e <vfprintf+0x1c2>
     b42:	b6 01       	movw	r22, r12
     b44:	80 e2       	ldi	r24, 0x20	; 32
     b46:	90 e0       	ldi	r25, 0x00	; 0
     b48:	0e 94 11 08 	call	0x1022	; 0x1022 <fputc>
     b4c:	2a 94       	dec	r2
     b4e:	f4 cf       	rjmp	.-24     	; 0xb38 <vfprintf+0x18c>
     b50:	f5 01       	movw	r30, r10
     b52:	37 fc       	sbrc	r3, 7
     b54:	85 91       	lpm	r24, Z+
     b56:	37 fe       	sbrs	r3, 7
     b58:	81 91       	ld	r24, Z+
     b5a:	5f 01       	movw	r10, r30
     b5c:	b6 01       	movw	r22, r12
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	0e 94 11 08 	call	0x1022	; 0x1022 <fputc>
     b64:	21 10       	cpse	r2, r1
     b66:	2a 94       	dec	r2
     b68:	21 e0       	ldi	r18, 0x01	; 1
     b6a:	82 1a       	sub	r8, r18
     b6c:	91 08       	sbc	r9, r1
     b6e:	81 14       	cp	r8, r1
     b70:	91 04       	cpc	r9, r1
     b72:	71 f7       	brne	.-36     	; 0xb50 <vfprintf+0x1a4>
     b74:	e8 c0       	rjmp	.+464    	; 0xd46 <vfprintf+0x39a>
     b76:	84 36       	cpi	r24, 0x64	; 100
     b78:	11 f0       	breq	.+4      	; 0xb7e <vfprintf+0x1d2>
     b7a:	89 36       	cpi	r24, 0x69	; 105
     b7c:	41 f5       	brne	.+80     	; 0xbce <vfprintf+0x222>
     b7e:	f8 01       	movw	r30, r16
     b80:	37 fe       	sbrs	r3, 7
     b82:	07 c0       	rjmp	.+14     	; 0xb92 <vfprintf+0x1e6>
     b84:	60 81       	ld	r22, Z
     b86:	71 81       	ldd	r23, Z+1	; 0x01
     b88:	82 81       	ldd	r24, Z+2	; 0x02
     b8a:	93 81       	ldd	r25, Z+3	; 0x03
     b8c:	0c 5f       	subi	r16, 0xFC	; 252
     b8e:	1f 4f       	sbci	r17, 0xFF	; 255
     b90:	08 c0       	rjmp	.+16     	; 0xba2 <vfprintf+0x1f6>
     b92:	60 81       	ld	r22, Z
     b94:	71 81       	ldd	r23, Z+1	; 0x01
     b96:	07 2e       	mov	r0, r23
     b98:	00 0c       	add	r0, r0
     b9a:	88 0b       	sbc	r24, r24
     b9c:	99 0b       	sbc	r25, r25
     b9e:	0e 5f       	subi	r16, 0xFE	; 254
     ba0:	1f 4f       	sbci	r17, 0xFF	; 255
     ba2:	f3 2d       	mov	r31, r3
     ba4:	ff 76       	andi	r31, 0x6F	; 111
     ba6:	3f 2e       	mov	r3, r31
     ba8:	97 ff       	sbrs	r25, 7
     baa:	09 c0       	rjmp	.+18     	; 0xbbe <vfprintf+0x212>
     bac:	90 95       	com	r25
     bae:	80 95       	com	r24
     bb0:	70 95       	com	r23
     bb2:	61 95       	neg	r22
     bb4:	7f 4f       	sbci	r23, 0xFF	; 255
     bb6:	8f 4f       	sbci	r24, 0xFF	; 255
     bb8:	9f 4f       	sbci	r25, 0xFF	; 255
     bba:	f0 68       	ori	r31, 0x80	; 128
     bbc:	3f 2e       	mov	r3, r31
     bbe:	2a e0       	ldi	r18, 0x0A	; 10
     bc0:	30 e0       	ldi	r19, 0x00	; 0
     bc2:	a3 01       	movw	r20, r6
     bc4:	0e 94 4d 08 	call	0x109a	; 0x109a <__ultoa_invert>
     bc8:	88 2e       	mov	r8, r24
     bca:	86 18       	sub	r8, r6
     bcc:	45 c0       	rjmp	.+138    	; 0xc58 <vfprintf+0x2ac>
     bce:	85 37       	cpi	r24, 0x75	; 117
     bd0:	31 f4       	brne	.+12     	; 0xbde <vfprintf+0x232>
     bd2:	23 2d       	mov	r18, r3
     bd4:	2f 7e       	andi	r18, 0xEF	; 239
     bd6:	b2 2e       	mov	r11, r18
     bd8:	2a e0       	ldi	r18, 0x0A	; 10
     bda:	30 e0       	ldi	r19, 0x00	; 0
     bdc:	25 c0       	rjmp	.+74     	; 0xc28 <vfprintf+0x27c>
     bde:	93 2d       	mov	r25, r3
     be0:	99 7f       	andi	r25, 0xF9	; 249
     be2:	b9 2e       	mov	r11, r25
     be4:	8f 36       	cpi	r24, 0x6F	; 111
     be6:	c1 f0       	breq	.+48     	; 0xc18 <vfprintf+0x26c>
     be8:	18 f4       	brcc	.+6      	; 0xbf0 <vfprintf+0x244>
     bea:	88 35       	cpi	r24, 0x58	; 88
     bec:	79 f0       	breq	.+30     	; 0xc0c <vfprintf+0x260>
     bee:	b5 c0       	rjmp	.+362    	; 0xd5a <vfprintf+0x3ae>
     bf0:	80 37       	cpi	r24, 0x70	; 112
     bf2:	19 f0       	breq	.+6      	; 0xbfa <vfprintf+0x24e>
     bf4:	88 37       	cpi	r24, 0x78	; 120
     bf6:	21 f0       	breq	.+8      	; 0xc00 <vfprintf+0x254>
     bf8:	b0 c0       	rjmp	.+352    	; 0xd5a <vfprintf+0x3ae>
     bfa:	e9 2f       	mov	r30, r25
     bfc:	e0 61       	ori	r30, 0x10	; 16
     bfe:	be 2e       	mov	r11, r30
     c00:	b4 fe       	sbrs	r11, 4
     c02:	0d c0       	rjmp	.+26     	; 0xc1e <vfprintf+0x272>
     c04:	fb 2d       	mov	r31, r11
     c06:	f4 60       	ori	r31, 0x04	; 4
     c08:	bf 2e       	mov	r11, r31
     c0a:	09 c0       	rjmp	.+18     	; 0xc1e <vfprintf+0x272>
     c0c:	34 fe       	sbrs	r3, 4
     c0e:	0a c0       	rjmp	.+20     	; 0xc24 <vfprintf+0x278>
     c10:	29 2f       	mov	r18, r25
     c12:	26 60       	ori	r18, 0x06	; 6
     c14:	b2 2e       	mov	r11, r18
     c16:	06 c0       	rjmp	.+12     	; 0xc24 <vfprintf+0x278>
     c18:	28 e0       	ldi	r18, 0x08	; 8
     c1a:	30 e0       	ldi	r19, 0x00	; 0
     c1c:	05 c0       	rjmp	.+10     	; 0xc28 <vfprintf+0x27c>
     c1e:	20 e1       	ldi	r18, 0x10	; 16
     c20:	30 e0       	ldi	r19, 0x00	; 0
     c22:	02 c0       	rjmp	.+4      	; 0xc28 <vfprintf+0x27c>
     c24:	20 e1       	ldi	r18, 0x10	; 16
     c26:	32 e0       	ldi	r19, 0x02	; 2
     c28:	f8 01       	movw	r30, r16
     c2a:	b7 fe       	sbrs	r11, 7
     c2c:	07 c0       	rjmp	.+14     	; 0xc3c <vfprintf+0x290>
     c2e:	60 81       	ld	r22, Z
     c30:	71 81       	ldd	r23, Z+1	; 0x01
     c32:	82 81       	ldd	r24, Z+2	; 0x02
     c34:	93 81       	ldd	r25, Z+3	; 0x03
     c36:	0c 5f       	subi	r16, 0xFC	; 252
     c38:	1f 4f       	sbci	r17, 0xFF	; 255
     c3a:	06 c0       	rjmp	.+12     	; 0xc48 <vfprintf+0x29c>
     c3c:	60 81       	ld	r22, Z
     c3e:	71 81       	ldd	r23, Z+1	; 0x01
     c40:	80 e0       	ldi	r24, 0x00	; 0
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	0e 5f       	subi	r16, 0xFE	; 254
     c46:	1f 4f       	sbci	r17, 0xFF	; 255
     c48:	a3 01       	movw	r20, r6
     c4a:	0e 94 4d 08 	call	0x109a	; 0x109a <__ultoa_invert>
     c4e:	88 2e       	mov	r8, r24
     c50:	86 18       	sub	r8, r6
     c52:	fb 2d       	mov	r31, r11
     c54:	ff 77       	andi	r31, 0x7F	; 127
     c56:	3f 2e       	mov	r3, r31
     c58:	36 fe       	sbrs	r3, 6
     c5a:	0d c0       	rjmp	.+26     	; 0xc76 <vfprintf+0x2ca>
     c5c:	23 2d       	mov	r18, r3
     c5e:	2e 7f       	andi	r18, 0xFE	; 254
     c60:	a2 2e       	mov	r10, r18
     c62:	89 14       	cp	r8, r9
     c64:	58 f4       	brcc	.+22     	; 0xc7c <vfprintf+0x2d0>
     c66:	34 fe       	sbrs	r3, 4
     c68:	0b c0       	rjmp	.+22     	; 0xc80 <vfprintf+0x2d4>
     c6a:	32 fc       	sbrc	r3, 2
     c6c:	09 c0       	rjmp	.+18     	; 0xc80 <vfprintf+0x2d4>
     c6e:	83 2d       	mov	r24, r3
     c70:	8e 7e       	andi	r24, 0xEE	; 238
     c72:	a8 2e       	mov	r10, r24
     c74:	05 c0       	rjmp	.+10     	; 0xc80 <vfprintf+0x2d4>
     c76:	b8 2c       	mov	r11, r8
     c78:	a3 2c       	mov	r10, r3
     c7a:	03 c0       	rjmp	.+6      	; 0xc82 <vfprintf+0x2d6>
     c7c:	b8 2c       	mov	r11, r8
     c7e:	01 c0       	rjmp	.+2      	; 0xc82 <vfprintf+0x2d6>
     c80:	b9 2c       	mov	r11, r9
     c82:	a4 fe       	sbrs	r10, 4
     c84:	0f c0       	rjmp	.+30     	; 0xca4 <vfprintf+0x2f8>
     c86:	fe 01       	movw	r30, r28
     c88:	e8 0d       	add	r30, r8
     c8a:	f1 1d       	adc	r31, r1
     c8c:	80 81       	ld	r24, Z
     c8e:	80 33       	cpi	r24, 0x30	; 48
     c90:	21 f4       	brne	.+8      	; 0xc9a <vfprintf+0x2ee>
     c92:	9a 2d       	mov	r25, r10
     c94:	99 7e       	andi	r25, 0xE9	; 233
     c96:	a9 2e       	mov	r10, r25
     c98:	09 c0       	rjmp	.+18     	; 0xcac <vfprintf+0x300>
     c9a:	a2 fe       	sbrs	r10, 2
     c9c:	06 c0       	rjmp	.+12     	; 0xcaa <vfprintf+0x2fe>
     c9e:	b3 94       	inc	r11
     ca0:	b3 94       	inc	r11
     ca2:	04 c0       	rjmp	.+8      	; 0xcac <vfprintf+0x300>
     ca4:	8a 2d       	mov	r24, r10
     ca6:	86 78       	andi	r24, 0x86	; 134
     ca8:	09 f0       	breq	.+2      	; 0xcac <vfprintf+0x300>
     caa:	b3 94       	inc	r11
     cac:	a3 fc       	sbrc	r10, 3
     cae:	11 c0       	rjmp	.+34     	; 0xcd2 <vfprintf+0x326>
     cb0:	a0 fe       	sbrs	r10, 0
     cb2:	06 c0       	rjmp	.+12     	; 0xcc0 <vfprintf+0x314>
     cb4:	b2 14       	cp	r11, r2
     cb6:	88 f4       	brcc	.+34     	; 0xcda <vfprintf+0x32e>
     cb8:	28 0c       	add	r2, r8
     cba:	92 2c       	mov	r9, r2
     cbc:	9b 18       	sub	r9, r11
     cbe:	0e c0       	rjmp	.+28     	; 0xcdc <vfprintf+0x330>
     cc0:	b2 14       	cp	r11, r2
     cc2:	60 f4       	brcc	.+24     	; 0xcdc <vfprintf+0x330>
     cc4:	b6 01       	movw	r22, r12
     cc6:	80 e2       	ldi	r24, 0x20	; 32
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	0e 94 11 08 	call	0x1022	; 0x1022 <fputc>
     cce:	b3 94       	inc	r11
     cd0:	f7 cf       	rjmp	.-18     	; 0xcc0 <vfprintf+0x314>
     cd2:	b2 14       	cp	r11, r2
     cd4:	18 f4       	brcc	.+6      	; 0xcdc <vfprintf+0x330>
     cd6:	2b 18       	sub	r2, r11
     cd8:	02 c0       	rjmp	.+4      	; 0xcde <vfprintf+0x332>
     cda:	98 2c       	mov	r9, r8
     cdc:	21 2c       	mov	r2, r1
     cde:	a4 fe       	sbrs	r10, 4
     ce0:	10 c0       	rjmp	.+32     	; 0xd02 <vfprintf+0x356>
     ce2:	b6 01       	movw	r22, r12
     ce4:	80 e3       	ldi	r24, 0x30	; 48
     ce6:	90 e0       	ldi	r25, 0x00	; 0
     ce8:	0e 94 11 08 	call	0x1022	; 0x1022 <fputc>
     cec:	a2 fe       	sbrs	r10, 2
     cee:	17 c0       	rjmp	.+46     	; 0xd1e <vfprintf+0x372>
     cf0:	a1 fc       	sbrc	r10, 1
     cf2:	03 c0       	rjmp	.+6      	; 0xcfa <vfprintf+0x34e>
     cf4:	88 e7       	ldi	r24, 0x78	; 120
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	02 c0       	rjmp	.+4      	; 0xcfe <vfprintf+0x352>
     cfa:	88 e5       	ldi	r24, 0x58	; 88
     cfc:	90 e0       	ldi	r25, 0x00	; 0
     cfe:	b6 01       	movw	r22, r12
     d00:	0c c0       	rjmp	.+24     	; 0xd1a <vfprintf+0x36e>
     d02:	8a 2d       	mov	r24, r10
     d04:	86 78       	andi	r24, 0x86	; 134
     d06:	59 f0       	breq	.+22     	; 0xd1e <vfprintf+0x372>
     d08:	a1 fe       	sbrs	r10, 1
     d0a:	02 c0       	rjmp	.+4      	; 0xd10 <vfprintf+0x364>
     d0c:	8b e2       	ldi	r24, 0x2B	; 43
     d0e:	01 c0       	rjmp	.+2      	; 0xd12 <vfprintf+0x366>
     d10:	80 e2       	ldi	r24, 0x20	; 32
     d12:	a7 fc       	sbrc	r10, 7
     d14:	8d e2       	ldi	r24, 0x2D	; 45
     d16:	b6 01       	movw	r22, r12
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	0e 94 11 08 	call	0x1022	; 0x1022 <fputc>
     d1e:	89 14       	cp	r8, r9
     d20:	38 f4       	brcc	.+14     	; 0xd30 <vfprintf+0x384>
     d22:	b6 01       	movw	r22, r12
     d24:	80 e3       	ldi	r24, 0x30	; 48
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	0e 94 11 08 	call	0x1022	; 0x1022 <fputc>
     d2c:	9a 94       	dec	r9
     d2e:	f7 cf       	rjmp	.-18     	; 0xd1e <vfprintf+0x372>
     d30:	8a 94       	dec	r8
     d32:	f3 01       	movw	r30, r6
     d34:	e8 0d       	add	r30, r8
     d36:	f1 1d       	adc	r31, r1
     d38:	80 81       	ld	r24, Z
     d3a:	b6 01       	movw	r22, r12
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	0e 94 11 08 	call	0x1022	; 0x1022 <fputc>
     d42:	81 10       	cpse	r8, r1
     d44:	f5 cf       	rjmp	.-22     	; 0xd30 <vfprintf+0x384>
     d46:	22 20       	and	r2, r2
     d48:	09 f4       	brne	.+2      	; 0xd4c <vfprintf+0x3a0>
     d4a:	42 ce       	rjmp	.-892    	; 0x9d0 <vfprintf+0x24>
     d4c:	b6 01       	movw	r22, r12
     d4e:	80 e2       	ldi	r24, 0x20	; 32
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	0e 94 11 08 	call	0x1022	; 0x1022 <fputc>
     d56:	2a 94       	dec	r2
     d58:	f6 cf       	rjmp	.-20     	; 0xd46 <vfprintf+0x39a>
     d5a:	f6 01       	movw	r30, r12
     d5c:	86 81       	ldd	r24, Z+6	; 0x06
     d5e:	97 81       	ldd	r25, Z+7	; 0x07
     d60:	02 c0       	rjmp	.+4      	; 0xd66 <vfprintf+0x3ba>
     d62:	8f ef       	ldi	r24, 0xFF	; 255
     d64:	9f ef       	ldi	r25, 0xFF	; 255
     d66:	2b 96       	adiw	r28, 0x0b	; 11
     d68:	e2 e1       	ldi	r30, 0x12	; 18
     d6a:	0c 94 c7 08 	jmp	0x118e	; 0x118e <__epilogue_restores__>

00000d6e <calloc>:
     d6e:	0f 93       	push	r16
     d70:	1f 93       	push	r17
     d72:	cf 93       	push	r28
     d74:	df 93       	push	r29
     d76:	86 9f       	mul	r24, r22
     d78:	80 01       	movw	r16, r0
     d7a:	87 9f       	mul	r24, r23
     d7c:	10 0d       	add	r17, r0
     d7e:	96 9f       	mul	r25, r22
     d80:	10 0d       	add	r17, r0
     d82:	11 24       	eor	r1, r1
     d84:	c8 01       	movw	r24, r16
     d86:	0e 94 d3 06 	call	0xda6	; 0xda6 <malloc>
     d8a:	ec 01       	movw	r28, r24
     d8c:	00 97       	sbiw	r24, 0x00	; 0
     d8e:	29 f0       	breq	.+10     	; 0xd9a <calloc+0x2c>
     d90:	a8 01       	movw	r20, r16
     d92:	60 e0       	ldi	r22, 0x00	; 0
     d94:	70 e0       	ldi	r23, 0x00	; 0
     d96:	0e 94 ff 07 	call	0xffe	; 0xffe <memset>
     d9a:	ce 01       	movw	r24, r28
     d9c:	df 91       	pop	r29
     d9e:	cf 91       	pop	r28
     da0:	1f 91       	pop	r17
     da2:	0f 91       	pop	r16
     da4:	08 95       	ret

00000da6 <malloc>:
     da6:	0f 93       	push	r16
     da8:	1f 93       	push	r17
     daa:	cf 93       	push	r28
     dac:	df 93       	push	r29
     dae:	82 30       	cpi	r24, 0x02	; 2
     db0:	91 05       	cpc	r25, r1
     db2:	10 f4       	brcc	.+4      	; 0xdb8 <malloc+0x12>
     db4:	82 e0       	ldi	r24, 0x02	; 2
     db6:	90 e0       	ldi	r25, 0x00	; 0
     db8:	e0 91 72 03 	lds	r30, 0x0372	; 0x800372 <__flp>
     dbc:	f0 91 73 03 	lds	r31, 0x0373	; 0x800373 <__flp+0x1>
     dc0:	20 e0       	ldi	r18, 0x00	; 0
     dc2:	30 e0       	ldi	r19, 0x00	; 0
     dc4:	a0 e0       	ldi	r26, 0x00	; 0
     dc6:	b0 e0       	ldi	r27, 0x00	; 0
     dc8:	30 97       	sbiw	r30, 0x00	; 0
     dca:	19 f1       	breq	.+70     	; 0xe12 <malloc+0x6c>
     dcc:	40 81       	ld	r20, Z
     dce:	51 81       	ldd	r21, Z+1	; 0x01
     dd0:	02 81       	ldd	r16, Z+2	; 0x02
     dd2:	13 81       	ldd	r17, Z+3	; 0x03
     dd4:	48 17       	cp	r20, r24
     dd6:	59 07       	cpc	r21, r25
     dd8:	c8 f0       	brcs	.+50     	; 0xe0c <malloc+0x66>
     dda:	84 17       	cp	r24, r20
     ddc:	95 07       	cpc	r25, r21
     dde:	69 f4       	brne	.+26     	; 0xdfa <malloc+0x54>
     de0:	10 97       	sbiw	r26, 0x00	; 0
     de2:	31 f0       	breq	.+12     	; 0xdf0 <malloc+0x4a>
     de4:	12 96       	adiw	r26, 0x02	; 2
     de6:	0c 93       	st	X, r16
     de8:	12 97       	sbiw	r26, 0x02	; 2
     dea:	13 96       	adiw	r26, 0x03	; 3
     dec:	1c 93       	st	X, r17
     dee:	27 c0       	rjmp	.+78     	; 0xe3e <malloc+0x98>
     df0:	00 93 72 03 	sts	0x0372, r16	; 0x800372 <__flp>
     df4:	10 93 73 03 	sts	0x0373, r17	; 0x800373 <__flp+0x1>
     df8:	22 c0       	rjmp	.+68     	; 0xe3e <malloc+0x98>
     dfa:	21 15       	cp	r18, r1
     dfc:	31 05       	cpc	r19, r1
     dfe:	19 f0       	breq	.+6      	; 0xe06 <malloc+0x60>
     e00:	42 17       	cp	r20, r18
     e02:	53 07       	cpc	r21, r19
     e04:	18 f4       	brcc	.+6      	; 0xe0c <malloc+0x66>
     e06:	9a 01       	movw	r18, r20
     e08:	bd 01       	movw	r22, r26
     e0a:	ef 01       	movw	r28, r30
     e0c:	df 01       	movw	r26, r30
     e0e:	f8 01       	movw	r30, r16
     e10:	db cf       	rjmp	.-74     	; 0xdc8 <malloc+0x22>
     e12:	21 15       	cp	r18, r1
     e14:	31 05       	cpc	r19, r1
     e16:	f9 f0       	breq	.+62     	; 0xe56 <malloc+0xb0>
     e18:	28 1b       	sub	r18, r24
     e1a:	39 0b       	sbc	r19, r25
     e1c:	24 30       	cpi	r18, 0x04	; 4
     e1e:	31 05       	cpc	r19, r1
     e20:	80 f4       	brcc	.+32     	; 0xe42 <malloc+0x9c>
     e22:	8a 81       	ldd	r24, Y+2	; 0x02
     e24:	9b 81       	ldd	r25, Y+3	; 0x03
     e26:	61 15       	cp	r22, r1
     e28:	71 05       	cpc	r23, r1
     e2a:	21 f0       	breq	.+8      	; 0xe34 <malloc+0x8e>
     e2c:	fb 01       	movw	r30, r22
     e2e:	93 83       	std	Z+3, r25	; 0x03
     e30:	82 83       	std	Z+2, r24	; 0x02
     e32:	04 c0       	rjmp	.+8      	; 0xe3c <malloc+0x96>
     e34:	90 93 73 03 	sts	0x0373, r25	; 0x800373 <__flp+0x1>
     e38:	80 93 72 03 	sts	0x0372, r24	; 0x800372 <__flp>
     e3c:	fe 01       	movw	r30, r28
     e3e:	32 96       	adiw	r30, 0x02	; 2
     e40:	44 c0       	rjmp	.+136    	; 0xeca <malloc+0x124>
     e42:	fe 01       	movw	r30, r28
     e44:	e2 0f       	add	r30, r18
     e46:	f3 1f       	adc	r31, r19
     e48:	81 93       	st	Z+, r24
     e4a:	91 93       	st	Z+, r25
     e4c:	22 50       	subi	r18, 0x02	; 2
     e4e:	31 09       	sbc	r19, r1
     e50:	39 83       	std	Y+1, r19	; 0x01
     e52:	28 83       	st	Y, r18
     e54:	3a c0       	rjmp	.+116    	; 0xeca <malloc+0x124>
     e56:	20 91 70 03 	lds	r18, 0x0370	; 0x800370 <__brkval>
     e5a:	30 91 71 03 	lds	r19, 0x0371	; 0x800371 <__brkval+0x1>
     e5e:	23 2b       	or	r18, r19
     e60:	41 f4       	brne	.+16     	; 0xe72 <malloc+0xcc>
     e62:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     e66:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     e6a:	30 93 71 03 	sts	0x0371, r19	; 0x800371 <__brkval+0x1>
     e6e:	20 93 70 03 	sts	0x0370, r18	; 0x800370 <__brkval>
     e72:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     e76:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     e7a:	21 15       	cp	r18, r1
     e7c:	31 05       	cpc	r19, r1
     e7e:	41 f4       	brne	.+16     	; 0xe90 <malloc+0xea>
     e80:	2d b7       	in	r18, 0x3d	; 61
     e82:	3e b7       	in	r19, 0x3e	; 62
     e84:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     e88:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     e8c:	24 1b       	sub	r18, r20
     e8e:	35 0b       	sbc	r19, r21
     e90:	e0 91 70 03 	lds	r30, 0x0370	; 0x800370 <__brkval>
     e94:	f0 91 71 03 	lds	r31, 0x0371	; 0x800371 <__brkval+0x1>
     e98:	e2 17       	cp	r30, r18
     e9a:	f3 07       	cpc	r31, r19
     e9c:	a0 f4       	brcc	.+40     	; 0xec6 <malloc+0x120>
     e9e:	2e 1b       	sub	r18, r30
     ea0:	3f 0b       	sbc	r19, r31
     ea2:	28 17       	cp	r18, r24
     ea4:	39 07       	cpc	r19, r25
     ea6:	78 f0       	brcs	.+30     	; 0xec6 <malloc+0x120>
     ea8:	ac 01       	movw	r20, r24
     eaa:	4e 5f       	subi	r20, 0xFE	; 254
     eac:	5f 4f       	sbci	r21, 0xFF	; 255
     eae:	24 17       	cp	r18, r20
     eb0:	35 07       	cpc	r19, r21
     eb2:	48 f0       	brcs	.+18     	; 0xec6 <malloc+0x120>
     eb4:	4e 0f       	add	r20, r30
     eb6:	5f 1f       	adc	r21, r31
     eb8:	50 93 71 03 	sts	0x0371, r21	; 0x800371 <__brkval+0x1>
     ebc:	40 93 70 03 	sts	0x0370, r20	; 0x800370 <__brkval>
     ec0:	81 93       	st	Z+, r24
     ec2:	91 93       	st	Z+, r25
     ec4:	02 c0       	rjmp	.+4      	; 0xeca <malloc+0x124>
     ec6:	e0 e0       	ldi	r30, 0x00	; 0
     ec8:	f0 e0       	ldi	r31, 0x00	; 0
     eca:	cf 01       	movw	r24, r30
     ecc:	df 91       	pop	r29
     ece:	cf 91       	pop	r28
     ed0:	1f 91       	pop	r17
     ed2:	0f 91       	pop	r16
     ed4:	08 95       	ret

00000ed6 <free>:
     ed6:	cf 93       	push	r28
     ed8:	df 93       	push	r29
     eda:	00 97       	sbiw	r24, 0x00	; 0
     edc:	09 f4       	brne	.+2      	; 0xee0 <free+0xa>
     ede:	81 c0       	rjmp	.+258    	; 0xfe2 <free+0x10c>
     ee0:	fc 01       	movw	r30, r24
     ee2:	32 97       	sbiw	r30, 0x02	; 2
     ee4:	13 82       	std	Z+3, r1	; 0x03
     ee6:	12 82       	std	Z+2, r1	; 0x02
     ee8:	a0 91 72 03 	lds	r26, 0x0372	; 0x800372 <__flp>
     eec:	b0 91 73 03 	lds	r27, 0x0373	; 0x800373 <__flp+0x1>
     ef0:	10 97       	sbiw	r26, 0x00	; 0
     ef2:	81 f4       	brne	.+32     	; 0xf14 <free+0x3e>
     ef4:	20 81       	ld	r18, Z
     ef6:	31 81       	ldd	r19, Z+1	; 0x01
     ef8:	82 0f       	add	r24, r18
     efa:	93 1f       	adc	r25, r19
     efc:	20 91 70 03 	lds	r18, 0x0370	; 0x800370 <__brkval>
     f00:	30 91 71 03 	lds	r19, 0x0371	; 0x800371 <__brkval+0x1>
     f04:	28 17       	cp	r18, r24
     f06:	39 07       	cpc	r19, r25
     f08:	51 f5       	brne	.+84     	; 0xf5e <free+0x88>
     f0a:	f0 93 71 03 	sts	0x0371, r31	; 0x800371 <__brkval+0x1>
     f0e:	e0 93 70 03 	sts	0x0370, r30	; 0x800370 <__brkval>
     f12:	67 c0       	rjmp	.+206    	; 0xfe2 <free+0x10c>
     f14:	ed 01       	movw	r28, r26
     f16:	20 e0       	ldi	r18, 0x00	; 0
     f18:	30 e0       	ldi	r19, 0x00	; 0
     f1a:	ce 17       	cp	r28, r30
     f1c:	df 07       	cpc	r29, r31
     f1e:	40 f4       	brcc	.+16     	; 0xf30 <free+0x5a>
     f20:	4a 81       	ldd	r20, Y+2	; 0x02
     f22:	5b 81       	ldd	r21, Y+3	; 0x03
     f24:	9e 01       	movw	r18, r28
     f26:	41 15       	cp	r20, r1
     f28:	51 05       	cpc	r21, r1
     f2a:	f1 f0       	breq	.+60     	; 0xf68 <free+0x92>
     f2c:	ea 01       	movw	r28, r20
     f2e:	f5 cf       	rjmp	.-22     	; 0xf1a <free+0x44>
     f30:	d3 83       	std	Z+3, r29	; 0x03
     f32:	c2 83       	std	Z+2, r28	; 0x02
     f34:	40 81       	ld	r20, Z
     f36:	51 81       	ldd	r21, Z+1	; 0x01
     f38:	84 0f       	add	r24, r20
     f3a:	95 1f       	adc	r25, r21
     f3c:	c8 17       	cp	r28, r24
     f3e:	d9 07       	cpc	r29, r25
     f40:	59 f4       	brne	.+22     	; 0xf58 <free+0x82>
     f42:	88 81       	ld	r24, Y
     f44:	99 81       	ldd	r25, Y+1	; 0x01
     f46:	84 0f       	add	r24, r20
     f48:	95 1f       	adc	r25, r21
     f4a:	02 96       	adiw	r24, 0x02	; 2
     f4c:	91 83       	std	Z+1, r25	; 0x01
     f4e:	80 83       	st	Z, r24
     f50:	8a 81       	ldd	r24, Y+2	; 0x02
     f52:	9b 81       	ldd	r25, Y+3	; 0x03
     f54:	93 83       	std	Z+3, r25	; 0x03
     f56:	82 83       	std	Z+2, r24	; 0x02
     f58:	21 15       	cp	r18, r1
     f5a:	31 05       	cpc	r19, r1
     f5c:	29 f4       	brne	.+10     	; 0xf68 <free+0x92>
     f5e:	f0 93 73 03 	sts	0x0373, r31	; 0x800373 <__flp+0x1>
     f62:	e0 93 72 03 	sts	0x0372, r30	; 0x800372 <__flp>
     f66:	3d c0       	rjmp	.+122    	; 0xfe2 <free+0x10c>
     f68:	e9 01       	movw	r28, r18
     f6a:	fb 83       	std	Y+3, r31	; 0x03
     f6c:	ea 83       	std	Y+2, r30	; 0x02
     f6e:	49 91       	ld	r20, Y+
     f70:	59 91       	ld	r21, Y+
     f72:	c4 0f       	add	r28, r20
     f74:	d5 1f       	adc	r29, r21
     f76:	ec 17       	cp	r30, r28
     f78:	fd 07       	cpc	r31, r29
     f7a:	61 f4       	brne	.+24     	; 0xf94 <free+0xbe>
     f7c:	80 81       	ld	r24, Z
     f7e:	91 81       	ldd	r25, Z+1	; 0x01
     f80:	84 0f       	add	r24, r20
     f82:	95 1f       	adc	r25, r21
     f84:	02 96       	adiw	r24, 0x02	; 2
     f86:	e9 01       	movw	r28, r18
     f88:	99 83       	std	Y+1, r25	; 0x01
     f8a:	88 83       	st	Y, r24
     f8c:	82 81       	ldd	r24, Z+2	; 0x02
     f8e:	93 81       	ldd	r25, Z+3	; 0x03
     f90:	9b 83       	std	Y+3, r25	; 0x03
     f92:	8a 83       	std	Y+2, r24	; 0x02
     f94:	e0 e0       	ldi	r30, 0x00	; 0
     f96:	f0 e0       	ldi	r31, 0x00	; 0
     f98:	12 96       	adiw	r26, 0x02	; 2
     f9a:	8d 91       	ld	r24, X+
     f9c:	9c 91       	ld	r25, X
     f9e:	13 97       	sbiw	r26, 0x03	; 3
     fa0:	00 97       	sbiw	r24, 0x00	; 0
     fa2:	19 f0       	breq	.+6      	; 0xfaa <free+0xd4>
     fa4:	fd 01       	movw	r30, r26
     fa6:	dc 01       	movw	r26, r24
     fa8:	f7 cf       	rjmp	.-18     	; 0xf98 <free+0xc2>
     faa:	8d 91       	ld	r24, X+
     fac:	9c 91       	ld	r25, X
     fae:	11 97       	sbiw	r26, 0x01	; 1
     fb0:	9d 01       	movw	r18, r26
     fb2:	2e 5f       	subi	r18, 0xFE	; 254
     fb4:	3f 4f       	sbci	r19, 0xFF	; 255
     fb6:	82 0f       	add	r24, r18
     fb8:	93 1f       	adc	r25, r19
     fba:	20 91 70 03 	lds	r18, 0x0370	; 0x800370 <__brkval>
     fbe:	30 91 71 03 	lds	r19, 0x0371	; 0x800371 <__brkval+0x1>
     fc2:	28 17       	cp	r18, r24
     fc4:	39 07       	cpc	r19, r25
     fc6:	69 f4       	brne	.+26     	; 0xfe2 <free+0x10c>
     fc8:	30 97       	sbiw	r30, 0x00	; 0
     fca:	29 f4       	brne	.+10     	; 0xfd6 <free+0x100>
     fcc:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <__flp+0x1>
     fd0:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <__flp>
     fd4:	02 c0       	rjmp	.+4      	; 0xfda <free+0x104>
     fd6:	13 82       	std	Z+3, r1	; 0x03
     fd8:	12 82       	std	Z+2, r1	; 0x02
     fda:	b0 93 71 03 	sts	0x0371, r27	; 0x800371 <__brkval+0x1>
     fde:	a0 93 70 03 	sts	0x0370, r26	; 0x800370 <__brkval>
     fe2:	df 91       	pop	r29
     fe4:	cf 91       	pop	r28
     fe6:	08 95       	ret

00000fe8 <strnlen_P>:
     fe8:	fc 01       	movw	r30, r24
     fea:	05 90       	lpm	r0, Z+
     fec:	61 50       	subi	r22, 0x01	; 1
     fee:	70 40       	sbci	r23, 0x00	; 0
     ff0:	01 10       	cpse	r0, r1
     ff2:	d8 f7       	brcc	.-10     	; 0xfea <strnlen_P+0x2>
     ff4:	80 95       	com	r24
     ff6:	90 95       	com	r25
     ff8:	8e 0f       	add	r24, r30
     ffa:	9f 1f       	adc	r25, r31
     ffc:	08 95       	ret

00000ffe <memset>:
     ffe:	dc 01       	movw	r26, r24
    1000:	01 c0       	rjmp	.+2      	; 0x1004 <memset+0x6>
    1002:	6d 93       	st	X+, r22
    1004:	41 50       	subi	r20, 0x01	; 1
    1006:	50 40       	sbci	r21, 0x00	; 0
    1008:	e0 f7       	brcc	.-8      	; 0x1002 <memset+0x4>
    100a:	08 95       	ret

0000100c <strnlen>:
    100c:	fc 01       	movw	r30, r24
    100e:	61 50       	subi	r22, 0x01	; 1
    1010:	70 40       	sbci	r23, 0x00	; 0
    1012:	01 90       	ld	r0, Z+
    1014:	01 10       	cpse	r0, r1
    1016:	d8 f7       	brcc	.-10     	; 0x100e <strnlen+0x2>
    1018:	80 95       	com	r24
    101a:	90 95       	com	r25
    101c:	8e 0f       	add	r24, r30
    101e:	9f 1f       	adc	r25, r31
    1020:	08 95       	ret

00001022 <fputc>:
    1022:	0f 93       	push	r16
    1024:	1f 93       	push	r17
    1026:	cf 93       	push	r28
    1028:	df 93       	push	r29
    102a:	fb 01       	movw	r30, r22
    102c:	23 81       	ldd	r18, Z+3	; 0x03
    102e:	21 fd       	sbrc	r18, 1
    1030:	03 c0       	rjmp	.+6      	; 0x1038 <fputc+0x16>
    1032:	8f ef       	ldi	r24, 0xFF	; 255
    1034:	9f ef       	ldi	r25, 0xFF	; 255
    1036:	2c c0       	rjmp	.+88     	; 0x1090 <fputc+0x6e>
    1038:	22 ff       	sbrs	r18, 2
    103a:	16 c0       	rjmp	.+44     	; 0x1068 <fputc+0x46>
    103c:	46 81       	ldd	r20, Z+6	; 0x06
    103e:	57 81       	ldd	r21, Z+7	; 0x07
    1040:	24 81       	ldd	r18, Z+4	; 0x04
    1042:	35 81       	ldd	r19, Z+5	; 0x05
    1044:	42 17       	cp	r20, r18
    1046:	53 07       	cpc	r21, r19
    1048:	44 f4       	brge	.+16     	; 0x105a <fputc+0x38>
    104a:	a0 81       	ld	r26, Z
    104c:	b1 81       	ldd	r27, Z+1	; 0x01
    104e:	9d 01       	movw	r18, r26
    1050:	2f 5f       	subi	r18, 0xFF	; 255
    1052:	3f 4f       	sbci	r19, 0xFF	; 255
    1054:	31 83       	std	Z+1, r19	; 0x01
    1056:	20 83       	st	Z, r18
    1058:	8c 93       	st	X, r24
    105a:	26 81       	ldd	r18, Z+6	; 0x06
    105c:	37 81       	ldd	r19, Z+7	; 0x07
    105e:	2f 5f       	subi	r18, 0xFF	; 255
    1060:	3f 4f       	sbci	r19, 0xFF	; 255
    1062:	37 83       	std	Z+7, r19	; 0x07
    1064:	26 83       	std	Z+6, r18	; 0x06
    1066:	14 c0       	rjmp	.+40     	; 0x1090 <fputc+0x6e>
    1068:	8b 01       	movw	r16, r22
    106a:	ec 01       	movw	r28, r24
    106c:	fb 01       	movw	r30, r22
    106e:	00 84       	ldd	r0, Z+8	; 0x08
    1070:	f1 85       	ldd	r31, Z+9	; 0x09
    1072:	e0 2d       	mov	r30, r0
    1074:	09 95       	icall
    1076:	89 2b       	or	r24, r25
    1078:	e1 f6       	brne	.-72     	; 0x1032 <fputc+0x10>
    107a:	d8 01       	movw	r26, r16
    107c:	16 96       	adiw	r26, 0x06	; 6
    107e:	8d 91       	ld	r24, X+
    1080:	9c 91       	ld	r25, X
    1082:	17 97       	sbiw	r26, 0x07	; 7
    1084:	01 96       	adiw	r24, 0x01	; 1
    1086:	17 96       	adiw	r26, 0x07	; 7
    1088:	9c 93       	st	X, r25
    108a:	8e 93       	st	-X, r24
    108c:	16 97       	sbiw	r26, 0x06	; 6
    108e:	ce 01       	movw	r24, r28
    1090:	df 91       	pop	r29
    1092:	cf 91       	pop	r28
    1094:	1f 91       	pop	r17
    1096:	0f 91       	pop	r16
    1098:	08 95       	ret

0000109a <__ultoa_invert>:
    109a:	fa 01       	movw	r30, r20
    109c:	aa 27       	eor	r26, r26
    109e:	28 30       	cpi	r18, 0x08	; 8
    10a0:	51 f1       	breq	.+84     	; 0x10f6 <__ultoa_invert+0x5c>
    10a2:	20 31       	cpi	r18, 0x10	; 16
    10a4:	81 f1       	breq	.+96     	; 0x1106 <__ultoa_invert+0x6c>
    10a6:	e8 94       	clt
    10a8:	6f 93       	push	r22
    10aa:	6e 7f       	andi	r22, 0xFE	; 254
    10ac:	6e 5f       	subi	r22, 0xFE	; 254
    10ae:	7f 4f       	sbci	r23, 0xFF	; 255
    10b0:	8f 4f       	sbci	r24, 0xFF	; 255
    10b2:	9f 4f       	sbci	r25, 0xFF	; 255
    10b4:	af 4f       	sbci	r26, 0xFF	; 255
    10b6:	b1 e0       	ldi	r27, 0x01	; 1
    10b8:	3e d0       	rcall	.+124    	; 0x1136 <__ultoa_invert+0x9c>
    10ba:	b4 e0       	ldi	r27, 0x04	; 4
    10bc:	3c d0       	rcall	.+120    	; 0x1136 <__ultoa_invert+0x9c>
    10be:	67 0f       	add	r22, r23
    10c0:	78 1f       	adc	r23, r24
    10c2:	89 1f       	adc	r24, r25
    10c4:	9a 1f       	adc	r25, r26
    10c6:	a1 1d       	adc	r26, r1
    10c8:	68 0f       	add	r22, r24
    10ca:	79 1f       	adc	r23, r25
    10cc:	8a 1f       	adc	r24, r26
    10ce:	91 1d       	adc	r25, r1
    10d0:	a1 1d       	adc	r26, r1
    10d2:	6a 0f       	add	r22, r26
    10d4:	71 1d       	adc	r23, r1
    10d6:	81 1d       	adc	r24, r1
    10d8:	91 1d       	adc	r25, r1
    10da:	a1 1d       	adc	r26, r1
    10dc:	20 d0       	rcall	.+64     	; 0x111e <__ultoa_invert+0x84>
    10de:	09 f4       	brne	.+2      	; 0x10e2 <__ultoa_invert+0x48>
    10e0:	68 94       	set
    10e2:	3f 91       	pop	r19
    10e4:	2a e0       	ldi	r18, 0x0A	; 10
    10e6:	26 9f       	mul	r18, r22
    10e8:	11 24       	eor	r1, r1
    10ea:	30 19       	sub	r19, r0
    10ec:	30 5d       	subi	r19, 0xD0	; 208
    10ee:	31 93       	st	Z+, r19
    10f0:	de f6       	brtc	.-74     	; 0x10a8 <__ultoa_invert+0xe>
    10f2:	cf 01       	movw	r24, r30
    10f4:	08 95       	ret
    10f6:	46 2f       	mov	r20, r22
    10f8:	47 70       	andi	r20, 0x07	; 7
    10fa:	40 5d       	subi	r20, 0xD0	; 208
    10fc:	41 93       	st	Z+, r20
    10fe:	b3 e0       	ldi	r27, 0x03	; 3
    1100:	0f d0       	rcall	.+30     	; 0x1120 <__ultoa_invert+0x86>
    1102:	c9 f7       	brne	.-14     	; 0x10f6 <__ultoa_invert+0x5c>
    1104:	f6 cf       	rjmp	.-20     	; 0x10f2 <__ultoa_invert+0x58>
    1106:	46 2f       	mov	r20, r22
    1108:	4f 70       	andi	r20, 0x0F	; 15
    110a:	40 5d       	subi	r20, 0xD0	; 208
    110c:	4a 33       	cpi	r20, 0x3A	; 58
    110e:	18 f0       	brcs	.+6      	; 0x1116 <__ultoa_invert+0x7c>
    1110:	49 5d       	subi	r20, 0xD9	; 217
    1112:	31 fd       	sbrc	r19, 1
    1114:	40 52       	subi	r20, 0x20	; 32
    1116:	41 93       	st	Z+, r20
    1118:	02 d0       	rcall	.+4      	; 0x111e <__ultoa_invert+0x84>
    111a:	a9 f7       	brne	.-22     	; 0x1106 <__ultoa_invert+0x6c>
    111c:	ea cf       	rjmp	.-44     	; 0x10f2 <__ultoa_invert+0x58>
    111e:	b4 e0       	ldi	r27, 0x04	; 4
    1120:	a6 95       	lsr	r26
    1122:	97 95       	ror	r25
    1124:	87 95       	ror	r24
    1126:	77 95       	ror	r23
    1128:	67 95       	ror	r22
    112a:	ba 95       	dec	r27
    112c:	c9 f7       	brne	.-14     	; 0x1120 <__ultoa_invert+0x86>
    112e:	00 97       	sbiw	r24, 0x00	; 0
    1130:	61 05       	cpc	r22, r1
    1132:	71 05       	cpc	r23, r1
    1134:	08 95       	ret
    1136:	9b 01       	movw	r18, r22
    1138:	ac 01       	movw	r20, r24
    113a:	0a 2e       	mov	r0, r26
    113c:	06 94       	lsr	r0
    113e:	57 95       	ror	r21
    1140:	47 95       	ror	r20
    1142:	37 95       	ror	r19
    1144:	27 95       	ror	r18
    1146:	ba 95       	dec	r27
    1148:	c9 f7       	brne	.-14     	; 0x113c <__ultoa_invert+0xa2>
    114a:	62 0f       	add	r22, r18
    114c:	73 1f       	adc	r23, r19
    114e:	84 1f       	adc	r24, r20
    1150:	95 1f       	adc	r25, r21
    1152:	a0 1d       	adc	r26, r0
    1154:	08 95       	ret

00001156 <__prologue_saves__>:
    1156:	2f 92       	push	r2
    1158:	3f 92       	push	r3
    115a:	4f 92       	push	r4
    115c:	5f 92       	push	r5
    115e:	6f 92       	push	r6
    1160:	7f 92       	push	r7
    1162:	8f 92       	push	r8
    1164:	9f 92       	push	r9
    1166:	af 92       	push	r10
    1168:	bf 92       	push	r11
    116a:	cf 92       	push	r12
    116c:	df 92       	push	r13
    116e:	ef 92       	push	r14
    1170:	ff 92       	push	r15
    1172:	0f 93       	push	r16
    1174:	1f 93       	push	r17
    1176:	cf 93       	push	r28
    1178:	df 93       	push	r29
    117a:	cd b7       	in	r28, 0x3d	; 61
    117c:	de b7       	in	r29, 0x3e	; 62
    117e:	ca 1b       	sub	r28, r26
    1180:	db 0b       	sbc	r29, r27
    1182:	0f b6       	in	r0, 0x3f	; 63
    1184:	f8 94       	cli
    1186:	de bf       	out	0x3e, r29	; 62
    1188:	0f be       	out	0x3f, r0	; 63
    118a:	cd bf       	out	0x3d, r28	; 61
    118c:	09 94       	ijmp

0000118e <__epilogue_restores__>:
    118e:	2a 88       	ldd	r2, Y+18	; 0x12
    1190:	39 88       	ldd	r3, Y+17	; 0x11
    1192:	48 88       	ldd	r4, Y+16	; 0x10
    1194:	5f 84       	ldd	r5, Y+15	; 0x0f
    1196:	6e 84       	ldd	r6, Y+14	; 0x0e
    1198:	7d 84       	ldd	r7, Y+13	; 0x0d
    119a:	8c 84       	ldd	r8, Y+12	; 0x0c
    119c:	9b 84       	ldd	r9, Y+11	; 0x0b
    119e:	aa 84       	ldd	r10, Y+10	; 0x0a
    11a0:	b9 84       	ldd	r11, Y+9	; 0x09
    11a2:	c8 84       	ldd	r12, Y+8	; 0x08
    11a4:	df 80       	ldd	r13, Y+7	; 0x07
    11a6:	ee 80       	ldd	r14, Y+6	; 0x06
    11a8:	fd 80       	ldd	r15, Y+5	; 0x05
    11aa:	0c 81       	ldd	r16, Y+4	; 0x04
    11ac:	1b 81       	ldd	r17, Y+3	; 0x03
    11ae:	aa 81       	ldd	r26, Y+2	; 0x02
    11b0:	b9 81       	ldd	r27, Y+1	; 0x01
    11b2:	ce 0f       	add	r28, r30
    11b4:	d1 1d       	adc	r29, r1
    11b6:	0f b6       	in	r0, 0x3f	; 63
    11b8:	f8 94       	cli
    11ba:	de bf       	out	0x3e, r29	; 62
    11bc:	0f be       	out	0x3f, r0	; 63
    11be:	cd bf       	out	0x3d, r28	; 61
    11c0:	ed 01       	movw	r28, r26
    11c2:	08 95       	ret

000011c4 <_exit>:
    11c4:	f8 94       	cli

000011c6 <__stop_program>:
    11c6:	ff cf       	rjmp	.-2      	; 0x11c6 <__stop_program>
